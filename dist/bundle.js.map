{"version":3,"sources":["webpack:///webpack/bootstrap 53a50ccfd62dccc023a9","webpack:///./src/config/index.js","webpack:///./src/service.js","webpack:///./src/collision/index.js","webpack:///./src/config/consts.js","webpack:///./src/cloud/index.js","webpack:///./src/obstacle/index.js","webpack:///./src/index.js","webpack:///./src/runner/index.js","webpack:///./src/runner/runner.js","webpack:///./src/config/trex-config.js","webpack:///./src/collision/collisionBox.js","webpack:///./src/config/cloud-config.js","webpack:///./src/config/runner-config.js","webpack:///./src/config/horizon-config.js","webpack:///./src/config/obstacle-config.js","webpack:///./src/config/nightMode-config.js","webpack:///./src/config/horizonLine-config.js","webpack:///./src/config/distanceMeter-config.js","webpack:///./src/config/gameOverPanel-config.js","webpack:///./src/horizon/index.js","webpack:///./src/horizon/horizon.js","webpack:///./src/horizon/horizonLine.js","webpack:///./src/nightMode/index.js","webpack:///./src/nightMode/nightMode.js","webpack:///./src/cloud/cloud.js","webpack:///./src/obstacle/obstacle.js","webpack:///./src/trex/index.js","webpack:///./src/trex/trex.js","webpack:///./src/distanceMeter/index.js","webpack:///./src/distanceMeter/distanceMeter.js","webpack:///./src/gameOverPanel/index.js","webpack:///./src/gameOverPanel/gameOverPanel.js","webpack:///./src/runner/imagesLoader.js"],"names":["trexConfig","cloudConfig","runnerConfig","horizonConfig","obstacleConfig","nightModeConfig","horizonLineConfig","distanceMeterConfig","gameOverPanelConfig","getRandomNum","vibrate","createCanvas","decodeBase64ToArrayBuffer","getTimeStamp","setAssignPolyFill","classes","min","max","Math","floor","random","duration","window","navigator","container","width","height","opt_classname","canvas","document","createElement","className","CANVAS","appendChild","base64String","len","length","str","atob","arrayBuffer","ArrayBuffer","bytes","Uint8Array","i","charCodeAt","buffer","Date","getTime","performance","now","Object","defineProperty","enumerable","configurable","writable","value","target","firstSource","undefined","TypeError","to","arguments","nextSource","keysArray","keys","nextIndex","nextKey","desc","getOwnPropertyDescriptor","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIMENSIONS","WIDTH","HEIGHT","FPS","IS_HIDPI","devicePixelRatio","IS_IOS","test","platform","IS_MOBILE","userAgent","IS_TOUCH_ENABLED","onDocumentLoad","console","log","assign","addEventListener","Runner","outerContainerId","opt_config","outerContainerEl","querySelector","containerEl","detailsButton","config","dimensions","canvasCtx","tRex","distanceMeter","distanceRan","highestScore","time","runningTime","msPerFrame","currentSpeed","SPEED","obstacles","activated","playing","crashed","paused","inverted","invertTimer","resizeTimerId_","playCount","audioBuffer","soundFx","audioContext","images","imagesLoaded","adjustDimensions","isDisabled","setupDisabledRunner","loadImages","SNACKBAR","textContent","loadTimeData","getValue","events","KEYDOWN","e","keycodes","JUMP","keyCode","classList","add","SNACKBAR_SHOW","bind","imagesLoader","spriteIds","checkAll","init","onLoaded","AudioContext","resourceTemplate","getElementById","RESOURCE_TEMPLATE_ID","content","sound","sounds","soundSrc","src","substr","indexOf","decodeAudioData","index","audioData","opt_speed","speed","mobileSpeed","MOBILE_SPEED_COEFFICIENT","ICON","style","visibility","setSpeed","CONTAINER","PLAYER","getContext","fillStyle","fill","updateCanvasScaling","initSprites","horizon","createTouchController","startListening","update","RESIZE","debounceResize","touchController","TOUCH_CONTROLLER","setInterval","clearInterval","boxStyles","getComputedStyle","padding","Number","paddingLeft","offsetWidth","calcXPos","clearCanvas","ceil","stop","draw","gameOverPanel","updateDimensions","playingIntro","keyframes","styleSheets","insertRule","ANIM_END","startGame","webkitAnimation","restart","VISIBILITY","onVisibilityChange","BLUR","FOCUS","clearRect","updatePending","deltaTime","jumping","updateJump","hasObstacles","CLEAR_TIME","jumpCount","playIntro","collision","MAX_SPEED","ACCELERATION","gameOver","playAchievementSound","playSound","SCORE","INVERT_FADE_DURATION","invertTrigger","invert","actualDistance","getActualDistance","INVERT_DISTANCE","blinkCount","MAX_BLINK_COUNT","scheduleNextUpdate","evtType","TOUCHSTART","MOUSEDOWN","onKeyDown","KEYUP","TOUCHEND","MOUSEUP","onKeyUp","type","removeEventListener","preventDefault","loadSounds","errorPageController","trackEasterEgg","ducking","BUTTON_PRESS","startJump","currentTarget","DUCK","setSpeedDrop","setDuck","String","isjumpKey","isRunning","endJump","speedDrop","RESTART","isLeftClickOnCanvas","GAMEOVER_CLEAR_TIME","reset","play","button","raqId","requestAnimationFrame","HIT","acheivement","status","CRASHED","setHighScore","cancelAnimationFrame","RUNNING","remove","hidden","webkitHidden","visibilityState","soundBuffer","sourceNode","createBufferSource","connect","destination","start","body","toggle","INVERTED","opt_width","opt_height","context","backingStoreRatio","webkitBackingStorePixelRatio","ratio","oldWidth","oldHeight","scale","BOTTOM_PAD","DROP_VELOCITY","GRAVITY","HEIGHT_DUCK","INIITAL_JUMP_VELOCITY","INTRO_DURATION","MAX_JUMP_HEIGHT","MIN_JUMP_HEIGHT","SPEED_DROP_COEFFICIENT","START_X_POS","WIDTH_DUCK","sourceDimensions","collisionBoxes","DUCKING","JUMPING","WAITING","BLINK_TIMING","animFrames","frames","LDPI","TREX","HDPI","checkForCollision","createAdjustedCollisionBox","drawCollisionBoxes","boxCompare","CollisionBox","x","y","w","h","obstacle","opt_canvasCtx","obstacleBoxXPos","xPos","tRexBox","yPos","obstacleBox","typeConfig","size","tRexCollisionBoxes","t","adjTrexBox","adjObstacleBox","box","adjustment","save","strokeStyle","strokeRect","restore","tRexBoxX","tRexBoxY","obstacleBoxX","obstacleBoxY","MAX_CLOUD_GAP","MAX_SKY_LEVEL","MIN_CLOUD_GAP","MIN_SKY_LEVEL","CLOUD","CLICK","LOAD","HORIZON","MOON","STAR","CACTUS_SMALL","CACTUS_LARGE","PTERODACTYL","TEXT_SPRITE","GAME_OVER","BG_CLOUD_SPEED","CLOUD_FREQUENCY","MAX_OBSTACLE_DUPLICATION","MAX_CLOUDS","MAX_GAP_COEFFICIENT","GAP_COEFFICIENT","MAX_OBSTACLE_LENGTH","types","multipleSpeed","minGap","minSpeed","yPosMobile","numFrames","frameRate","speedOffset","FADE_SPEED","MOON_SPEED","NUM_STARS","STAR_SIZE","STAR_SPEED","STAR_MAX_Y","moon","phases","YPOS","BUMP_THRESHOLD","DEST_WIDTH","MAX_DISTANCE_UNITS","ACHIEVEMENT_DISTANCE","COEFFICIENT","FLASH_DURATION","FLASH_ITERATIONS","TEXT_X","TEXT_Y","TEXT_WIDTH","TEXT_HEIGHT","RESTART_WIDTH","RESTART_HEIGHT","Horizon","obstacleHistory","cloudFrequency","nightMode","clouds","cloudSpeed","horizonLine","addCloud","updateObstacles","showNightMode","updateClouds","numClouds","lastCloud","cloudGap","filter","obj","updatedObstacles","slice","shift","lastObstacle","followingObstacleCreated","isVisible","gap","addNewObstacle","obstacleTypeIndex","obstacleType","duplicateObstacleCheck","push","unshift","splice","nextObstacleType","duplicateCount","HorizonLine","spritePos","sprite","sourceXPos","bumpThreshold","setSourceDimensions","setSprite","dimension","drawImage","pos","increment","line1","line2","getRandomType","updateXPos","NightMode","moonSpritePos","starSpritePos","currentPhase","opacity","containerWidth","stars","drawStars","placeStars","moonSprite","starSprite","delta","currentPos","moonSourceWidth","moonSourceHeight","moonSourceX","moonOutputWidth","sourceStarSize","starSourceX","globalAlpha","sourceY","round","segmentSize","Cloud","CLOUD_SPRITE","sourceWidth","sourceHeight","Obstacle","gapCoefficient","currentFrame","timer","Array","isArray","yPosConfig","getGap","sourceX","maxGap","Trex","groundYPos","currentAnimFrames","blinkDelay","animStartTime","jumpVelocity","reachedMinHeight","jumpspotX","minJumpHeight","setting","opt_status","setBlinkDelay","blink","framesElapsed","isDucking","midair","DistanceMeter","maxScore","highScore","digits","defaultString","flashTimer","flashIterations","maxScoreUnits","maxDistanceStr","parseInt","canvasWidth","digitPos","opt_highScore","targetX","targetY","targetWidth","targetHeight","highScoreX","translate","distance","paint","distanceStr","split","drawHighScore","highScoreStr","concat","GameOverPanel","canvasDimensions","textImgPos","restartImgPos","setSprites","textSprite","restartSprite","centerX","textSourceX","textSourceY","textSourceWidth","textSourceHeight","textTargetX","textTargetY","textTargetWidth","textTargetHeight","restartSourceWidth","restartSourceHeight","restartTargetX","restartTargetY","ImagesLoader","ids","loadedCallback","callbackCalled","setImages","name","reduce","accumulated","current","complete","img","callback","addEventListeners"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 53a50ccfd62dccc023a9","import * as trexConfig from './trex-config';\nimport * as cloudConfig from './cloud-config';\nimport * as runnerConfig from './runner-config';\nimport * as horizonConfig from './horizon-config';\nimport * as obstacleConfig from './obstacle-config';\nimport * as nightModeConfig from './nightMode-config';\nimport * as horizonLineConfig from './horizonLine-config';\nimport * as distanceMeterConfig from './distanceMeter-config';\nimport * as gameOverPanelConfig from './gameOverPanel-config';\n\nexport {\n  trexConfig,\n  cloudConfig,\n  runnerConfig,\n  horizonConfig,\n  obstacleConfig,\n  nightModeConfig,\n  horizonLineConfig,\n  distanceMeterConfig,\n  gameOverPanelConfig,\n};\n\nexport * from './consts';\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","import {\n  IS_IOS,\n  IS_MOBILE,\n  runnerConfig\n} from 'Configs';\n\nconst { classes } = runnerConfig; \n\nexport function getRandomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * Vibrate on mobile devices.\n * @param {number} duration Duration of the vibration in milliseconds.\n */\nexport function vibrate(duration) {\n  if (IS_MOBILE && window.navigator.vibrate) {\n    window.navigator.vibrate(duration);\n  }\n};\n\n/**\n * Create canvas element.\n * @param {HTMLElement} container Element to append canvas to.\n * @param {number} width\n * @param {number} height\n * @param {string} opt_classname\n * @return {HTMLCanvasElement}\n */\nexport function createCanvas(container, width, height, opt_classname) {\n  var canvas = document.createElement('canvas');\n  canvas.className = opt_classname ? classes.CANVAS + ' ' +\n    opt_classname : classes.CANVAS;\n  canvas.width = width;\n  canvas.height = height;\n  container.appendChild(canvas);\n\n  return canvas;\n};\n\n/**\n * Decodes the base 64 audio to ArrayBuffer used by Web Audio.\n * @param {string} base64String\n */\nexport function decodeBase64ToArrayBuffer(base64String) {\n  var len = (base64String.length / 4) * 3;\n  var str = atob(base64String);\n  var arrayBuffer = new ArrayBuffer(len);\n  var bytes = new Uint8Array(arrayBuffer);\n\n  for (var i = 0; i < len; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\n/**\n * Return the current timestamp.\n * @return {number}\n */\nexport function getTimeStamp() {\n  return IS_IOS ? new Date().getTime() : performance.now();\n};\n\nexport function setAssignPolyFill() {\n  Object.defineProperty(Object, 'assign', {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function(target, firstSource) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert first argument to object');\n      }\n\n      var to = Object(target);\n      for (var i = 1; i < arguments.length; i++) {\n        var nextSource = arguments[i];\n        if (nextSource === undefined || nextSource === null) {\n          continue;\n        }\n\n        var keysArray = Object.keys(Object(nextSource));\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n      return to;\n    }\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service.js","export * from './collisionBox';\n\n\n// WEBPACK FOOTER //\n// ./src/collision/index.js","/**\n * Default game width.\n * @const\n */\nexport const DEFAULT_WIDTH = 900;\n\nexport const DEFAULT_HEIGHT = 270;\n\nexport const DIMENSIONS = {\n  WIDTH: DEFAULT_WIDTH,\n  HEIGHT: DEFAULT_HEIGHT\n}\n\n/**\n * Frames per second.\n * @const\n */\nexport const FPS = 60;\n\n/** @const */\nexport const IS_HIDPI = window.devicePixelRatio > 1;\n\n/** @const */\nexport const IS_IOS = /iPad|iPhone|iPod/.test(window.navigator.platform);\n\n/** @const */\nexport const IS_MOBILE = /Android/.test(window.navigator.userAgent) || IS_IOS;\n\n/** @const */\nexport const IS_TOUCH_ENABLED = 'ontouchstart' in window;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/consts.js","import Cloud from './cloud';\n\nexport default Cloud;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cloud/index.js","import Obstacle from './obstacle';\n\nexport default Obstacle;\n\n\n// WEBPACK FOOTER //\n// ./src/obstacle/index.js","import Runner from './runner';\nimport { setAssignPolyFill } from './service';\n(function () {\n  window['Runner'] = Runner;\n\n})();\n\n\nfunction onDocumentLoad() {\n  console.log(`Object assign defined:${Object.assign != undefined}`)\n  if (!Object.assign) {\n     \n    setAssignPolyFill();\n\n    console.log(`Assign Polyfill set:${Object.assign != undefined}`);\n  }\n  console.log(`Object assign defined:${Object.assign != undefined}`)  \n  \n  new Runner('.interstitial-wrapper');  \n}\n\ndocument.addEventListener('DOMContentLoaded', onDocumentLoad);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Runner from './runner';\n\nexport default Runner;\n\n\n// WEBPACK FOOTER //\n// ./src/runner/index.js","import {\n  runnerConfig,\n  DEFAULT_WIDTH,\n  FPS,\n  IS_HIDPI,\n  IS_IOS,\n  IS_MOBILE,\n  IS_TOUCH_ENABLED,\n  DIMENSIONS,\n} from 'Configs';\nimport { \n  createCanvas,\n  getTimeStamp,\n  decodeBase64ToArrayBuffer,\n  vibrate,\n} from '../service';\nimport Horizon from '../horizon';\nimport Trex from '../trex';\nimport DistanceMeter from '../distanceMeter';\nimport GameOverPanel from '../gameOverPanel';\nimport Obstacle from '../obstacle';\nimport Cloud from '../cloud';\nimport { checkForCollision } from '../collision';\nimport ImagesLoader from './imagesLoader';\n\nclass Runner {\n  constructor(outerContainerId, opt_config) {\n    this.outerContainerEl = document.querySelector(outerContainerId);\n    this.containerEl = null;\n    this.detailsButton = this.outerContainerEl.querySelector('#details-button');\n\n    this.config = opt_config || Runner.config;\n\n    this.dimensions = DIMENSIONS;\n\n    this.canvas = null;\n    this.canvasCtx = null;\n\n    this.tRex = null;\n\n    this.distanceMeter = null;\n    this.distanceRan = 0;\n\n    this.highestScore = 0;\n\n    this.time = 0;\n    this.runningTime = 0;\n    this.msPerFrame = 1000 / FPS;\n    this.currentSpeed = this.config.SPEED;\n\n    this.obstacles = [];\n\n    this.activated = false; // Whether the easter egg has been activated.\n    this.playing = false; // Whether the game is currently in play state.\n    this.crashed = false;\n    this.paused = false;\n    this.inverted = false;\n    this.invertTimer = 0;\n    this.resizeTimerId_ = null;\n\n    this.playCount = 0;\n\n    // Sound FX.\n    this.audioBuffer = null;\n    this.soundFx = {};\n\n    // Global web audio context for playing sounds.\n    this.audioContext = null;\n\n    // Images.\n    this.images = {};\n    this.imagesLoaded = 0;\n\n    this.adjustDimensions();\n\n    if (this.isDisabled()) {\n      this.setupDisabledRunner();\n    } else {\n      this.loadImages();\n    }\n  }\n\n  isDisabled() {\n    // return loadTimeData && loadTimeData.valueExists('disabledEasterEgg');\n    return false;\n  }\n\n  /**\n   * For disabled instances, set up a snackbar with the disabled message.\n   */\n  setupDisabledRunner() {\n    this.containerEl = document.createElement('div');\n    this.containerEl.className = Runner.classes.SNACKBAR;\n    this.containerEl.textContent = loadTimeData.getValue('disabledEasterEgg');\n    this.outerContainerEl.appendChild(this.containerEl);\n\n    // Show notification when the activation key is pressed.\n    document.addEventListener(Runner.events.KEYDOWN, function(e) {\n      if (Runner.keycodes.JUMP[e.keyCode]) {\n        this.containerEl.classList.add(Runner.classes.SNACKBAR_SHOW);\n        document.querySelector('.icon').classList.add('icon-disabled');\n      }\n    }.bind(this));\n  }\n\n  /**\n   * Cache the appropriate image sprite from the page and get the sprite sheet\n   * definition.\n   */\n  loadImages() {\n    let imagesLoader, spriteIds;    \n\n    if (IS_HIDPI) {\n      spriteIds = Runner.spriteIds['HDPI'];\n    } else {\n      spriteIds = Runner.spriteIds['LDPI'];\n    }\n\n    imagesLoader = new ImagesLoader(spriteIds);\n\n    if (imagesLoader.checkAll()) {\n      this.init();\n    } else {\n      imagesLoader.onLoaded(this.init.bind(this));\n    }\n  }\n\n  /**\n   * Load and decode base 64 encoded sounds.\n   */\n  loadSounds() {\n    if (!IS_IOS) {\n      this.audioContext = new AudioContext();\n\n      let resourceTemplate =\n        document.getElementById(this.config.RESOURCE_TEMPLATE_ID).content;\n\n      for (let sound in Runner.sounds) {\n        let soundSrc =\n          resourceTemplate.getElementById(Runner.sounds[sound]).src;\n        soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1);\n        let buffer = decodeBase64ToArrayBuffer(soundSrc);\n\n        // Async, so no guarantee of order in array.\n        this.audioContext.decodeAudioData(buffer, function(index, audioData) {\n          this.soundFx[index] = audioData;\n        }.bind(this, sound));\n      }\n    }\n  }\n\n  /**\n   * Sets the game speed. Adjust the speed accordingly if on a smaller screen.\n   * @param {number} opt_speed\n   */\n  setSpeed(opt_speed) {\n    let speed = opt_speed || this.currentSpeed;\n\n    // Reduce the speed on smaller mobile screens.\n    if (this.dimensions.WIDTH < DEFAULT_WIDTH) {\n      let mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH *\n        this.config.MOBILE_SPEED_COEFFICIENT;\n      this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed;\n    } else if (opt_speed) {\n      this.currentSpeed = opt_speed;\n    }\n  }\n\n  /**\n   * Game initialiser.\n   */\n  init() {\n    // Hide the static icon.\n    document.querySelector('.' + Runner.classes.ICON).style.visibility =\n      'hidden';\n\n    this.adjustDimensions();\n    this.setSpeed();\n\n    this.containerEl = document.createElement('div');\n    this.containerEl.className = Runner.classes.CONTAINER;\n\n    // Player canvas container.\n    this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH,\n      this.dimensions.HEIGHT, Runner.classes.PLAYER);\n\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.canvasCtx.fillStyle = '#f7f7f7';\n    this.canvasCtx.fill();\n    Runner.updateCanvasScaling(this.canvas);\n\n    Cloud.initSprites();\n    Obstacle.initSprites();\n\n    // Horizon contains clouds, obstacles and the ground.\n    this.horizon = new Horizon(this.canvas);\n\n    // Distance meter\n    this.distanceMeter = new DistanceMeter(this.canvas);\n\n    // Draw t-rex\n    this.tRex = new Trex(this.canvas);\n\n\n    this.outerContainerEl.appendChild(this.containerEl);\n\n    if (IS_MOBILE) {\n      this.createTouchController();\n    }\n\n    this.startListening();\n    this.update();\n\n    window.addEventListener(Runner.events.RESIZE,\n      this.debounceResize.bind(this));\n  }\n\n  /**\n   * Create the touch controller. A div that covers whole screen.\n   */\n  createTouchController() {\n    this.touchController = document.createElement('div');\n    this.touchController.className = Runner.classes.TOUCH_CONTROLLER;\n    this.outerContainerEl.appendChild(this.touchController);\n  }\n\n  /**\n   * Debounce the resize event.\n   */\n  debounceResize() {\n    if (!this.resizeTimerId_) {\n      this.resizeTimerId_ =\n        setInterval(this.adjustDimensions.bind(this), 250);\n    }\n  }\n\n  /**\n   * Adjust game space dimensions on resize.\n   */\n  adjustDimensions() {\n    clearInterval(this.resizeTimerId_);\n    this.resizeTimerId_ = null;\n\n    let boxStyles = window.getComputedStyle(this.outerContainerEl);\n    let padding = Number(boxStyles.paddingLeft.substr(0,\n      boxStyles.paddingLeft.length - 2));\n\n    this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2;\n\n    // Redraw the elements back onto the canvas.\n    if (this.canvas) {\n      this.canvas.width = this.dimensions.WIDTH;\n      this.canvas.height = this.dimensions.HEIGHT;\n\n      Runner.updateCanvasScaling(this.canvas);\n\n      this.distanceMeter.calcXPos(this.dimensions.WIDTH);\n      this.clearCanvas();\n      this.horizon.update(0, 0, true);\n      this.tRex.update(0);\n\n      // Outer container and distance meter.\n      if (this.playing || this.crashed || this.paused) {\n        this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n        this.containerEl.style.height = this.dimensions.HEIGHT + 'px';\n        this.distanceMeter.update(0, Math.ceil(this.distanceRan));\n        this.stop();\n      } else {\n        this.tRex.draw(0, 0);\n      }\n\n      // Game over panel.\n      if (this.crashed && this.gameOverPanel) {\n        this.gameOverPanel.updateDimensions(this.dimensions.WIDTH);\n        this.gameOverPanel.draw();\n      }\n    }\n  }\n\n  /**\n   * Play the game intro.\n   * Canvas container width expands out to the full width.\n   */\n  playIntro() {\n    if (!this.activated && !this.crashed) {\n      this.playingIntro = true;\n      this.tRex.playingIntro = true;\n\n      // CSS animation definition.\n      let keyframes = '@-webkit-keyframes intro { ' +\n        'from { width:' + Trex.config.WIDTH + 'px }' +\n        'to { width: ' + this.dimensions.WIDTH + 'px }' +\n        '}';\n      document.styleSheets[0].insertRule(keyframes, 0);\n\n      this.containerEl.addEventListener(Runner.events.ANIM_END,\n        this.startGame.bind(this));\n\n      this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both';\n      this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n\n      // if (this.touchController) {\n      //     this.outerContainerEl.appendChild(this.touchController);\n      // }\n      this.playing = true;\n      this.activated = true;\n    } else if (this.crashed) {\n      this.restart();\n    }\n  }\n\n\n  /**\n   * Update the game status to started.\n   */\n  startGame() {\n    this.runningTime = 0;\n    this.playingIntro = false;\n    this.tRex.playingIntro = false;\n    this.containerEl.style.webkitAnimation = '';\n    this.playCount++;\n\n    // Handle tabbing off the page. Pause the current game.\n    document.addEventListener(Runner.events.VISIBILITY,\n      this.onVisibilityChange.bind(this));\n\n    window.addEventListener(Runner.events.BLUR,\n      this.onVisibilityChange.bind(this));\n\n    window.addEventListener(Runner.events.FOCUS,\n      this.onVisibilityChange.bind(this));\n  }\n\n  clearCanvas() {\n    this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH,\n      this.dimensions.HEIGHT);\n  }\n\n  /**\n   * Update the game frame and schedules the next one.\n   */\n  update() {\n    this.updatePending = false;\n\n    let now = getTimeStamp();\n    let deltaTime = now - (this.time || now);\n    this.time = now;\n\n    if (this.playing) {\n      this.clearCanvas();\n\n      if (this.tRex.jumping) {\n        this.tRex.updateJump(deltaTime);\n      }\n\n      this.runningTime += deltaTime;\n      let hasObstacles = this.runningTime > this.config.CLEAR_TIME;\n\n      // First jump triggers the intro.\n      if (this.tRex.jumpCount == 1 && !this.playingIntro) {\n        this.playIntro();\n      }\n\n      // The horizon doesn't move until the intro is over.\n      if (this.playingIntro) {\n        this.horizon.update(0, this.currentSpeed, hasObstacles);\n      } else {\n        deltaTime = !this.activated ? 0 : deltaTime;\n        this.horizon.update(deltaTime, this.currentSpeed, hasObstacles,\n          this.inverted);\n      }\n\n      // Check for collisions.\n      let collision = hasObstacles &&\n        checkForCollision(this.horizon.obstacles[0], this.tRex);\n\n      if (!collision) {\n        this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame;\n\n        if (this.currentSpeed < this.config.MAX_SPEED) {\n          this.currentSpeed += this.config.ACCELERATION;\n        }\n      } else {\n        this.gameOver();\n      }\n\n      let playAchievementSound = this.distanceMeter.update(deltaTime,\n        Math.ceil(this.distanceRan));\n\n      if (playAchievementSound) {\n        this.playSound(this.soundFx.SCORE);\n      }\n\n      // Night mode.\n      if (this.invertTimer > this.config.INVERT_FADE_DURATION) {\n        this.invertTimer = 0;\n        this.invertTrigger = false;\n        this.invert();\n      } else if (this.invertTimer) {\n        this.invertTimer += deltaTime;\n      } else {\n        let actualDistance =\n          this.distanceMeter.getActualDistance(Math.ceil(this.distanceRan));\n\n        if (actualDistance > 0) {\n          this.invertTrigger = !(actualDistance %\n            this.config.INVERT_DISTANCE);\n\n          if (this.invertTrigger && this.invertTimer === 0) {\n            this.invertTimer += deltaTime;\n            this.invert();\n          }\n        }\n      }\n    }\n\n    if (this.playing || (!this.activated &&\n        this.tRex.blinkCount < Runner.config.MAX_BLINK_COUNT)) {\n      this.tRex.update(deltaTime);\n      this.scheduleNextUpdate();\n    }\n  }\n\n  /**\n   * Event handler.\n   */\n  handleEvent(e) {\n    return (function(evtType, events) {\n      switch (evtType) {\n        case events.KEYDOWN:\n        case events.TOUCHSTART:\n        case events.MOUSEDOWN:\n          this.onKeyDown(e);\n          break;\n        case events.KEYUP:\n        case events.TOUCHEND:\n        case events.MOUSEUP:\n          this.onKeyUp(e);\n          break;\n      }\n    }.bind(this))(e.type, Runner.events);\n  }\n\n  /**\n   * Bind relevant key / mouse / touch listeners.\n   */\n  startListening() {\n    // Keys.\n    document.addEventListener(Runner.events.KEYDOWN, this);\n    document.addEventListener(Runner.events.KEYUP, this);\n\n    if (IS_MOBILE) {\n      // Mobile only touch devices.\n      this.touchController.addEventListener(Runner.events.TOUCHSTART, this);\n      this.touchController.addEventListener(Runner.events.TOUCHEND, this);\n      this.containerEl.addEventListener(Runner.events.TOUCHSTART, this);\n    } else {\n      // Mouse.\n      document.addEventListener(Runner.events.MOUSEDOWN, this);\n      document.addEventListener(Runner.events.MOUSEUP, this);\n    }\n  }\n\n  /**\n   * Remove all listeners.\n   */\n  stopListening() {\n    document.removeEventListener(Runner.events.KEYDOWN, this);\n    document.removeEventListener(Runner.events.KEYUP, this);\n\n    if (IS_MOBILE) {\n      this.touchController.removeEventListener(Runner.events.TOUCHSTART, this);\n      this.touchController.removeEventListener(Runner.events.TOUCHEND, this);\n      this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this);\n    } else {\n      document.removeEventListener(Runner.events.MOUSEDOWN, this);\n      document.removeEventListener(Runner.events.MOUSEUP, this);\n    }\n  }\n\n  /**\n   * Process keydown.\n   * @param {Event} e\n   */\n  onKeyDown(e) {\n    // Prevent native page scrolling whilst tapping on mobile.\n    if (IS_MOBILE && this.playing) {\n      e.preventDefault();\n    }\n\n    if (e.target != this.detailsButton) {\n      if (!this.crashed && (Runner.keycodes.JUMP[e.keyCode] ||\n          e.type == Runner.events.TOUCHSTART)) {\n        if (!this.playing) {\n          this.loadSounds();\n          this.playing = true;\n          this.update();\n          if (window.errorPageController) {\n            errorPageController.trackEasterEgg();\n          }\n        }\n        //  Play sound effect and jump on starting the game for the first time.\n        if (!this.tRex.jumping && !this.tRex.ducking) {\n          this.playSound(this.soundFx.BUTTON_PRESS);\n          this.tRex.startJump(this.currentSpeed);\n        }\n      }\n\n      if (this.crashed && e.type == Runner.events.TOUCHSTART &&\n        e.currentTarget == this.containerEl) {\n        this.restart();\n      }\n    }\n\n    if (this.playing && !this.crashed && Runner.keycodes.DUCK[e.keyCode]) {\n      e.preventDefault();\n      if (this.tRex.jumping) {\n        // Speed drop, activated only when jump key is not pressed.\n        this.tRex.setSpeedDrop();\n      } else if (!this.tRex.jumping && !this.tRex.ducking) {\n        // Duck.\n        this.tRex.setDuck(true);\n      }\n    }\n  }\n\n\n  /**\n   * Process key up.\n   * @param {Event} e\n   */\n  onKeyUp(e) {\n    let keyCode = String(e.keyCode);\n    let isjumpKey = Runner.keycodes.JUMP[keyCode] ||\n      e.type == Runner.events.TOUCHEND ||\n      e.type == Runner.events.MOUSEDOWN;\n\n    if (this.isRunning() && isjumpKey) {\n      this.tRex.endJump();\n    } else if (Runner.keycodes.DUCK[keyCode]) {\n      this.tRex.speedDrop = false;\n      this.tRex.setDuck(false);\n    } else if (this.crashed) {\n      // Check that enough time has elapsed before allowing jump key to restart.\n      let deltaTime = getTimeStamp() - this.time;\n\n      if (Runner.keycodes.RESTART[keyCode] || this.isLeftClickOnCanvas(e) ||\n        (deltaTime >= this.config.GAMEOVER_CLEAR_TIME &&\n          Runner.keycodes.JUMP[keyCode])) {\n        this.restart();\n      }\n    } else if (this.paused && isjumpKey) {\n      // Reset the jump state\n      this.tRex.reset();\n      this.play();\n    }\n  }\n\n  /**\n   * Returns whether the event was a left click on canvas.\n   * On Windows right click is registered as a click.\n   * @param {Event} e\n   * @return {boolean}\n   */\n  isLeftClickOnCanvas(e) {\n    return e.button != null && e.button < 2 &&\n      e.type == Runner.events.MOUSEUP && e.target == this.canvas;\n  }\n\n  /**\n   * RequestAnimationFrame wrapper.\n   */\n  scheduleNextUpdate() {\n    if (!this.updatePending) {\n      this.updatePending = true;\n      this.raqId = requestAnimationFrame(this.update.bind(this));\n    }\n  }\n\n  /**\n   * Whether the game is running.\n   * @return {boolean}\n   */\n  isRunning() {\n    return !!this.raqId;\n  }\n\n  /**\n   * Game over state.\n   */\n  gameOver() {\n    this.playSound(this.soundFx.HIT);\n    vibrate(200);\n\n    this.stop();\n    this.crashed = true;\n    this.distanceMeter.acheivement = false;\n\n    this.tRex.update(100, Trex.status.CRASHED);\n\n    // Game over panel.\n    if (!this.gameOverPanel) {\n      this.gameOverPanel = new GameOverPanel(this.canvas);\n    } else {\n      this.gameOverPanel.draw();\n    }\n\n    // Update the high score.\n    if (this.distanceRan > this.highestScore) {\n      this.highestScore = Math.ceil(this.distanceRan);\n      this.distanceMeter.setHighScore(this.highestScore);\n    }\n\n    // Reset the time clock.\n    this.time = getTimeStamp();\n  }\n\n  stop() {\n    this.playing = false;\n    this.paused = true;\n    cancelAnimationFrame(this.raqId);\n    this.raqId = 0;\n  }\n\n  play() {\n    if (!this.crashed) {\n      this.playing = true;\n      this.paused = false;\n      this.tRex.update(0, Trex.status.RUNNING);\n      this.time = getTimeStamp();\n      this.update();\n    }\n  }\n\n  restart() {\n    if (!this.raqId) {\n      this.playCount++;\n      this.runningTime = 0;\n      this.playing = true;\n      this.crashed = false;\n      this.distanceRan = 0;\n      this.setSpeed(this.config.SPEED);\n      this.time = getTimeStamp();\n      this.containerEl.classList.remove(Runner.classes.CRASHED);\n      this.clearCanvas();\n      this.distanceMeter.reset(this.highestScore);\n      this.horizon.reset();\n      this.tRex.reset();\n      this.playSound(this.soundFx.BUTTON_PRESS);\n      this.invert(true);\n      this.update();\n    }\n  }\n\n  /**\n   * Pause the game if the tab is not in focus.\n   */\n  onVisibilityChange(e) {\n    if (document.hidden || document.webkitHidden || e.type == 'blur' ||\n      document.visibilityState != 'visible') {\n      this.stop();\n    } else if (!this.crashed) {\n      this.tRex.reset();\n      this.play();\n    }\n  }\n\n  /**\n   * Play a sound.\n   * @param {SoundBuffer} soundBuffer\n   */\n  playSound(soundBuffer) {\n    if (soundBuffer) {\n      let sourceNode = this.audioContext.createBufferSource();\n      sourceNode.buffer = soundBuffer;\n      sourceNode.connect(this.audioContext.destination);\n      sourceNode.start(0);\n    }\n  }\n\n  /**\n   * Inverts the current page / canvas colors.\n   * @param {boolean} Whether to reset colors.\n   */\n  invert(reset) {\n    if (reset) {\n      document.body.classList.toggle(Runner.classes.INVERTED, false);\n      this.invertTimer = 0;\n      this.inverted = false;\n    } else {\n      this.inverted = document.body.classList.toggle(Runner.classes.INVERTED,\n        this.invertTrigger);\n    }\n  }\n}\n\nRunner = Object.assign(Runner, runnerConfig);\n\nRunner.updateCanvasScaling = (canvas, opt_width, opt_height) => {\n  let context = canvas.getContext('2d');\n\n  // Query the let pixel ratios\n  let devicePixelRatio = Math.floor(window.devicePixelRatio) || 1;\n  let backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1;\n  let ratio = devicePixelRatio / backingStoreRatio;\n\n  // Upscale the canvas if the two ratios don't match\n  if (devicePixelRatio !== backingStoreRatio) {\n    let oldWidth = opt_width || canvas.width;\n    let oldHeight = opt_height || canvas.height;\n\n    canvas.width = oldWidth * ratio;\n    canvas.height = oldHeight * ratio;\n\n    canvas.style.width = oldWidth + 'px';\n    canvas.style.height = oldHeight + 'px';\n\n    // Scale the context to counter the fact that we've manually scaled\n    // our canvas element.\n    context.scale(ratio, ratio);\n    return true;\n  } else if (devicePixelRatio == 1) {\n    // Reset the canvas width / height. Fixes scaling bug when the page is\n    // zoomed and the devicePixelRatio changes accordingly.\n    canvas.style.width = canvas.width + 'px';\n    canvas.style.height = canvas.height + 'px';\n  }\n  return false;\n};\n\nexport default Runner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runner/runner.js","import {CollisionBox} from '../collision';\n\nexport const config = {\n  BOTTOM_PAD: 10,\n  DROP_VELOCITY: -11,\n  GRAVITY: 1.0,\n  HEIGHT: 132,\n  HEIGHT_DUCK: 90,\n  INIITAL_JUMP_VELOCITY: -16,\n  INTRO_DURATION: 1200,\n  MAX_JUMP_HEIGHT: 120,\n  MIN_JUMP_HEIGHT: 80,\n  SPEED_DROP_COEFFICIENT: 3,\n  START_X_POS: 50,\n  WIDTH: 70,\n  WIDTH_DUCK: 70\n};\n\nexport const sourceDimensions = {\n  WIDTH: 187,\n  HEIGHT: 354,\n  WIDTH_DUCK: 181,\n  HEIGHT_DUCK: 254,  \n};\n\nexport const collisionBoxes = {\n  DUCKING: [\n    new CollisionBox(23, 42, 24, 4),\n    new CollisionBox(6, 46, 63, 19),\n    new CollisionBox(3, 65, 62, 67)\n  ],\n  RUNNING: [\n    new CollisionBox(19, 0, 26, 11),\n    new CollisionBox(5, 11, 54, 13),\n    new CollisionBox(1, 24, 64, 17),\n    new CollisionBox(0, 41, 55,42),\n    new CollisionBox(55, 41, 15, 8),\n    new CollisionBox(3, 83, 19, 40),\n    new CollisionBox(42, 83, 17, 49)\n  ]\n};\n\nexport const status = {\n  CRASHED: 'CRASHED',\n  DUCKING: 'DUCKING',\n  JUMPING: 'JUMPING',\n  RUNNING: 'RUNNING',\n  WAITING: 'WAITING'\n};\n\nexport const BLINK_TIMING = 7000;\n\nexport const animFrames = {\n    WAITING: {\n        frames: [188, 0],\n        msPerFrame: 1500 / 3\n    },\n    RUNNING: {\n        frames: [376, 564],\n        msPerFrame: 1500 / 12\n    },\n    CRASHED: {\n        frames: [940],\n        msPerFrame: 1500 / 60\n    },\n    JUMPING: {\n        frames: [0],\n        msPerFrame: 1500 / 60\n    },\n    DUCKING: {\n        frames: [1125, 1306],\n        msPerFrame: 1500 / 8\n    }\n};\n\nexport const spriteIds = {\n  LDPI: {\n      TREX: 'trex-1x'\n  },\n  HDPI: {\n      TREX: 'trex-2x'\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/trex-config.js","import {\n  trexConfig,\n  DIMENSIONS,\n} from 'Configs';\n\nexport class CollisionBox {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n};\n\n/**\n * Check for a collision.\n * @param {!Obstacle} obstacle\n * @param {!Trex} tRex T-rex object.\n * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing\n *    collision boxes.\n * @return {Array<CollisionBox>}\n */\nexport function checkForCollision(obstacle, tRex, opt_canvasCtx) {\n  let obstacleBoxXPos = DIMENSIONS.WIDTH + obstacle.xPos;\n\n  // Adjustments are made to the bounding box as there is a 1 pixel white\n  // border around the t-rex and obstacles.\n  let tRexBox = new CollisionBox(\n    tRex.xPos + 1,\n    tRex.yPos + 1,\n    tRex.config.WIDTH - 2,\n    tRex.config.HEIGHT - 2);\n\n  let obstacleBox = new CollisionBox(\n    obstacle.xPos + 1,\n    obstacle.yPos + 1,\n    obstacle.typeConfig.width * obstacle.size - 2,\n    obstacle.typeConfig.height - 2);\n\n  // Debug outer box\n  if (opt_canvasCtx) {\n    drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox);\n  }\n\n  // Simple outer bounds check.\n  if (boxCompare(tRexBox, obstacleBox)) {\n    let collisionBoxes = obstacle.collisionBoxes;\n    let tRexCollisionBoxes = tRex.ducking ?\n      trexConfig.collisionBoxes.DUCKING : trexConfig.collisionBoxes.RUNNING;\n\n    // Detailed axis aligned box check.\n    for (let t = 0; t < tRexCollisionBoxes.length; t++) {\n      for (let i = 0; i < collisionBoxes.length; i++) {\n        // Adjust the box to actual positions.\n        let adjTrexBox =\n          createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox);\n        let adjObstacleBox =\n          createAdjustedCollisionBox(collisionBoxes[i], obstacleBox);\n        let crashed = boxCompare(adjTrexBox, adjObstacleBox);\n\n        // Draw boxes for debug.\n        if (opt_canvasCtx) {\n          drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox);\n        }\n\n        if (crashed) {\n          return [adjTrexBox, adjObstacleBox];\n        }\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Adjust the collision box.\n * @param {!CollisionBox} box The original box.\n * @param {!CollisionBox} adjustment Adjustment box.\n * @return {CollisionBox} The adjusted collision box object.\n */\nexport function createAdjustedCollisionBox(box, adjustment) {\n  return new CollisionBox(\n    box.x + adjustment.x,\n    box.y + adjustment.y,\n    box.width,\n    box.height);\n};\n\n\n/**\n * Draw the collision boxes for debug.\n */\nexport function drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) {\n  canvasCtx.save();\n  canvasCtx.strokeStyle = '#f00';\n  canvasCtx.strokeRect(tRexBox.x, tRexBox.y, tRexBox.width, tRexBox.height);\n\n  canvasCtx.strokeStyle = '#0f0';\n  canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y,\n    obstacleBox.width, obstacleBox.height);\n  canvasCtx.restore();\n};\n\n\n/**\n * Compare two collision boxes for a collision.\n * @param {CollisionBox} tRexBox\n * @param {CollisionBox} obstacleBox\n * @return {boolean} Whether the boxes intersected.\n */\nexport function boxCompare(tRexBox, obstacleBox) {\n  let crashed = false;\n  let tRexBoxX = tRexBox.x;\n  let tRexBoxY = tRexBox.y;\n\n  let obstacleBoxX = obstacleBox.x;\n  let obstacleBoxY = obstacleBox.y;\n\n  // Axis-Aligned Bounding Box method.\n  if (tRexBox.x < obstacleBoxX + obstacleBox.width &&\n    tRexBox.x + tRexBox.width > obstacleBoxX &&\n    tRexBox.y < obstacleBox.y + obstacleBox.height &&\n    tRexBox.height + tRexBox.y > obstacleBox.y) {\n    crashed = true;\n  }\n\n  return crashed;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/collision/collisionBox.js","export const config = {\n  HEIGHT: 21,\n  MAX_CLOUD_GAP: 800,\n  MAX_SKY_LEVEL: 54,\n  MIN_CLOUD_GAP: 150,\n  MIN_SKY_LEVEL: 150,\n  WIDTH: 69\n};\n\nexport const sourceDimensions = {\n  HEIGHT: 14,\n  WIDTH: 46\n};\n\n\nexport const spriteIds = {\n  LDPI: {\n      CLOUD: 'cloud-1x'\n  },\n  HDPI: {\n      CLOUD: 'cloud-2x'\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/cloud-config.js","import {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from './consts';\n\nexport const config = {\n  ACCELERATION: 0.001,\n  CLEAR_TIME: 3000,\n  GAMEOVER_CLEAR_TIME: 750,\n  INVERT_FADE_DURATION: 10000,\n  INVERT_DISTANCE: 500,\n  MAX_BLINK_COUNT: 3,\n  MAX_SPEED: 20,\n  MOBILE_SPEED_COEFFICIENT: 2.5,\n  RESOURCE_TEMPLATE_ID: 'audio-resources',\n  SPEED: 6,\n};\n\nexport const classes = {\n  CANVAS: 'runner-canvas',\n  CONTAINER: 'runner-container',\n  CRASHED: 'crashed',\n  ICON: 'icon-offline',\n  INVERTED: 'inverted',\n  SNACKBAR: 'snackbar',\n  SNACKBAR_SHOW: 'snackbar-show',\n  TOUCH_CONTROLLER: 'controller'\n};\n\nexport const events = {\n  ANIM_END: 'webkitAnimationEnd',\n  CLICK: 'click',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  RESIZE: 'resize',\n  TOUCHEND: 'touchend',\n  TOUCHSTART: 'touchstart',\n  VISIBILITY: 'visibilitychange',\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  LOAD: 'load'\n};\n\nexport const spriteIds = {\n  LDPI: {\n      HORIZON: 'horizonLine-1x',\n      CLOUD: 'cloud-1x',\n      MOON: 'moon-1x',\n      STAR: 'star-1x',\n      CACTUS_SMALL: 'cactusSmall-1x',\n      CACTUS_LARGE: 'cactusLarge-1x',\n      PTERODACTYL: 'pterodactyl-1x',\n      TREX: 'trex-1x',\n      TEXT_SPRITE: 'text-1x',\n      GAME_OVER: 'gameOver-1x',\n      RESTART: 'restart-1x'\n  },\n  HDPI: {\n      HORIZON: 'horizonLine-2x',\n      CLOUD: 'cloud-2x',\n      MOON: 'moon-2x',\n      STAR: 'star-2x',\n      CACTUS_SMALL: 'cactusSmall-2x',\n      CACTUS_LARGE: 'cactusLarge-2x',\n      PTERODACTYL: 'pterodactyl-2x',\n      TREX: 'trex-2x',\n      TEXT_SPRITE: 'text-2x',\n      GAME_OVER: 'gameOver-2x',\n      RESTART: 'restart-2x'\n  }\n};\n\nexport const sounds = {\n  BUTTON_PRESS: 'offline-sound-press',\n  HIT: 'offline-sound-hit',\n  SCORE: 'offline-sound-reached'\n};\n\nexport const keycodes = {\n  JUMP: { '38': 1, '32': 1 },  // Up, spacebar\n  DUCK: { '40': 1 },  // Down\n  RESTART: { '13': 1 }  // Enter\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/runner-config.js","export const config = {\n  BG_CLOUD_SPEED: 0.2,\n  CLOUD_FREQUENCY: .5,\n  MAX_OBSTACLE_DUPLICATION: 2,\n  MAX_CLOUDS: 3\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/horizon-config.js","import { CollisionBox } from '../collision';\n\nexport const MAX_GAP_COEFFICIENT = 1.0;\n\nexport const GAP_COEFFICIENT = 0.5;\n\nexport const MAX_OBSTACLE_LENGTH = 3;\n\nexport const types = [{\n  type: 'CACTUS_SMALL',\n  width: 42,\n  height: 80,\n  sourceDimensions: {\n    width: 34,\n    height: 70,\n  },\n  yPos: 178,\n  multipleSpeed: 4,\n  minGap: 240,\n  minSpeed: 0,\n  collisionBoxes: {\n    '1': [ new CollisionBox(0, 0, 42, 80) ],\n    '2': [ \n      new CollisionBox(4, 1, 41, 75),\n      new CollisionBox(45, 13, 35, 63),\n    ],\n    '3': [ \n      new CollisionBox(0, 4, 43, 72),\n      new CollisionBox(43, 26, 77, 50),\n     ]\n  }\n}, \n{\n  type: 'CACTUS_LARGE',\n  width: 44,\n  height: 92,\n  sourceDimensions: {\n    width: 50,\n    height: 100,\n  },\n  yPos: 168,\n  multipleSpeed: 7,\n  minGap: 240,\n  minSpeed: 0,\n  collisionBoxes: {\n    '1': [ new CollisionBox(0, 0, 44, 92) ],\n    '2': [ new CollisionBox(0, 0, 88, 92) ],\n    '3': [ new CollisionBox(5, 5, 120, 78) ]\n  }\n}, {\n  type: 'PTERODACTYL',\n  width: 84,\n  height: 72,\n  sourceDimensions: {\n    width: 46,\n    height: 40,\n  },\n  yPos: [200, 100, 75], // Variable height.\n  yPosMobile: [180, 80], // Variable height mobile.\n  multipleSpeed: 999,\n  minSpeed: 8.5,\n  minGap: 300,\n  collisionBoxes: {\n    '1': [  new CollisionBox(0, 25, 84, 11) ]\n  }\n  ,\n  numFrames: 2,\n  frameRate: 2000 / 6,\n  speedOffset: .8\n}\n];\n\nexport const spriteIds = {\n  LDPI: {\n      CACTUS_SMALL: 'cactusSmall-1x',\n      CACTUS_LARGE: 'cactusLarge-1x',\n      PTERODACTYL: 'pterodactyl-1x',\n\n  },\n  HDPI: {\n      CACTUS_SMALL: 'cactusSmall-2x',\n      CACTUS_LARGE: 'cactusLarge-2x',\n      PTERODACTYL: 'pterodactyl-2x',\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/obstacle-config.js","export const config = {\n  FADE_SPEED: 0.035,\n  HEIGHT: 60,\n  MOON_SPEED: 0.3,\n  NUM_STARS: 2,\n  STAR_SIZE: 9,\n  STAR_SPEED: 0.3,\n  STAR_MAX_Y: 100,\n  WIDTH: 30\n};\n\nexport const sourceDimensions = {\n  moon: {\n    WIDTH: 40,\n    HEIGHT: 80,\n  },\n  STAR_SIZE: 9,\n};\n\n\nexport const spriteIds = {\n  LDPI: {\n      MOON: 'moon-1x',\n      STAR: 'star-1x'\n  },\n  HDPI: {\n      MOON: 'moon-2x',\n      STAR: 'star-2x'\n  }\n};\n\nexport const phases = [280, 240, 200, 120, 80, 40, 0];\n\n\n// WEBPACK FOOTER //\n// ./src/config/nightMode-config.js","export const dimensions = {\n  WIDTH: 900,\n  HEIGHT: 23,\n  YPOS: 234\n};\n\nexport const sourceDimensions = {\n  WIDTH: 600,\n  HEIGHT: 12,\n};\n\n\nexport const spriteIds = {\n  LDPI: {\n      HORIZON: 'horizonLine-1x',\n  },\n  HDPI: {\n      HORIZON: 'horizonLine-2x',\n  }\n};\n\nexport const BUMP_THRESHOLD = .5;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/horizonLine-config.js","export const dimensions = {\n  WIDTH: 10,\n  HEIGHT: 13,\n  DEST_WIDTH: 11\n};\n\n\n/**\n * Y positioning of the digits in the sprite sheet.\n * X position is always 0.\n * @type {Array<number>}\n */\nexport const yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120];\n\n\n/**\n * Distance meter config.\n * @enum {number}\n */\nexport const config = {\n  // Number of digits.\n  MAX_DISTANCE_UNITS: 5,\n\n  // Distance that causes achievement animation.\n  ACHIEVEMENT_DISTANCE: 100,\n\n  // Used for conversion from pixel distance to a scaled unit.\n  COEFFICIENT: 0.025,\n\n  // Flash duration in milliseconds.\n  FLASH_DURATION: 1000 / 4,\n\n  // Flash iterations for achievement animation.\n  FLASH_ITERATIONS: 3\n};\n\nexport const spriteIds = {\n  LDPI: {\n      TEXT_SPRITE: 'text-1x',\n  },\n  HDPI: {\n      TEXT_SPRITE: 'text-2x',\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/distanceMeter-config.js","export const dimensions = {\n  TEXT_X: 0,\n  TEXT_Y: 0,\n  TEXT_WIDTH: 191,\n  TEXT_HEIGHT: 11,\n  RESTART_WIDTH: 36,\n  RESTART_HEIGHT: 32\n};\n\nexport const spriteIds = {\n  LDPI: {\n      GAME_OVER: 'gameOver-1x',\n      RESTART: 'restart-1x'\n  },\n  HDPI: {\n      GAME_OVER: 'gameOver-2x',\n      RESTART: 'restart-2x'\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/gameOverPanel-config.js","import Horizon from './horizon';\n\nexport default Horizon;\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/index.js","import { \n  horizonConfig,\n  DIMENSIONS,\n} from 'Configs';\nimport HorizonLine from './horizonLine';\nimport NightMode from '../nightMode';\nimport Cloud from '../cloud';\nimport Obstacle from '../obstacle';\nimport { getRandomNum } from '../service';\n\nclass Horizon {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.config = Horizon.config;\n    this.obstacles = [];\n    this.obstacleHistory = [];\n    this.dimensions = DIMENSIONS;\n    this.cloudFrequency = this.config.CLOUD_FREQUENCY;\n    this.nightMode = null;\n\n    // Cloud\n    this.clouds = [];\n    this.cloudSpeed = this.config.BG_CLOUD_SPEED;\n\n    // Horizon\n    this.horizonLine = null;\n    this.init();\n  }\n\n  init() {\n    this.addCloud();\n    this.horizonLine = new HorizonLine(this.canvas);\n    this.nightMode = new NightMode(this.canvas);\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   * @param {boolean} updateObstacles Used as an override to prevent\n   *     the obstacles from being updated / added. This happens in the\n   *     ease in section.\n   * @param {boolean} showNightMode Night mode activated.\n   */\n  update(deltaTime, currentSpeed, updateObstacles, showNightMode) {\n    this.runningTime += deltaTime;\n    this.horizonLine.update(deltaTime, currentSpeed);\n    this.nightMode.update(showNightMode);\n    this.updateClouds(deltaTime, currentSpeed);\n\n    if (updateObstacles) {\n      this.updateObstacles(deltaTime, currentSpeed);\n    }\n  }\n\n  /**\n   * Update the cloud positions.\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   */\n  updateClouds(deltaTime, speed) {\n    var cloudSpeed = this.cloudSpeed / 1000 * deltaTime * speed;\n    var numClouds = this.clouds.length;\n\n    if (numClouds) {\n      for (var i = numClouds - 1; i >= 0; i--) {\n        this.clouds[i].update(cloudSpeed);\n      }\n\n      var lastCloud = this.clouds[numClouds - 1];\n\n      // Check for adding a new cloud.\n      if (numClouds < this.config.MAX_CLOUDS &&\n        (this.dimensions.WIDTH - lastCloud.xPos) > lastCloud.cloudGap &&\n        this.cloudFrequency > Math.random()) {\n        this.addCloud();\n      }\n\n      // Remove expired clouds.\n      this.clouds = this.clouds.filter(function(obj) {\n        return !obj.remove;\n      });\n    } else {\n      this.addCloud();\n    }\n  }\n\n  /**\n   * Update the obstacle positions.\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   */\n  updateObstacles(deltaTime, currentSpeed) {\n    // Obstacles, move to Horizon layer.\n    var updatedObstacles = this.obstacles.slice(0);\n\n    for (var i = 0; i < this.obstacles.length; i++) {\n      var obstacle = this.obstacles[i];\n      obstacle.update(deltaTime, currentSpeed);\n\n      // Clean up existing obstacles.\n      if (obstacle.remove) {\n        updatedObstacles.shift();\n      }\n    }\n    this.obstacles = updatedObstacles;\n\n    if (this.obstacles.length > 0) {\n      var lastObstacle = this.obstacles[this.obstacles.length - 1];\n\n      if (lastObstacle && !lastObstacle.followingObstacleCreated &&\n        lastObstacle.isVisible() &&\n        (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) <\n        this.dimensions.WIDTH) {\n        this.addNewObstacle(currentSpeed);\n        lastObstacle.followingObstacleCreated = true;\n      }\n    } else {\n      // Create new obstacles.\n      this.addNewObstacle(currentSpeed);\n    }\n  }\n\n  removeFirstObstacle() {\n    this.obstacles.shift();\n  }\n\n  /**\n   * Add a new obstacle.\n   * @param {number} currentSpeed\n   */\n  addNewObstacle(currentSpeed) {\n    var obstacleTypeIndex = getRandomNum(0, Obstacle.types.length - 1);\n    var obstacleType = Obstacle.types[obstacleTypeIndex];\n\n    // Check for multiples of the same type of obstacle.\n    // Also check obstacle is available at current speed.\n    if (this.duplicateObstacleCheck(obstacleType.type) ||\n      currentSpeed < obstacleType.minSpeed) {\n      this.addNewObstacle(currentSpeed);\n    } else {\n      this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType,\n        currentSpeed));\n\n      this.obstacleHistory.unshift(obstacleType.type);\n\n      if (this.obstacleHistory.length > 1) {\n        this.obstacleHistory.splice(Horizon.config.MAX_OBSTACLE_DUPLICATION);\n      }\n    }\n  }\n\n  /**\n   * Returns whether the previous two obstacles are the same as the next one.\n   * Maximum duplication is set in config value MAX_OBSTACLE_DUPLICATION.\n   * @return {boolean}\n   */\n  duplicateObstacleCheck(nextObstacleType) {\n    var duplicateCount = 0;\n\n    for (var i = 0; i < this.obstacleHistory.length; i++) {\n      duplicateCount = this.obstacleHistory[i] == nextObstacleType ?\n        duplicateCount + 1 : 0;\n    }\n    return duplicateCount >= Horizon.config.MAX_OBSTACLE_DUPLICATION;\n  }\n\n  /**\n   * Reset the horizon layer.\n   * Remove existing obstacles and reposition the horizon line.\n   */\n  reset() {\n    this.obstacles = [];\n    this.horizonLine.reset();\n    this.nightMode.reset();\n  }\n\n  /**\n   * Update the canvas width and scaling.\n   * @param {number} width Canvas width.\n   * @param {number} height Canvas height.\n   */\n  resize(width, height) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  /**\n   * Add a new cloud to the horizon.\n   */\n  addCloud() {\n    this.clouds.push(new Cloud(this.canvas));\n  }\n};\n\nHorizon = Object.assign(Horizon, horizonConfig);\n\nexport default Horizon;\n\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/horizon.js","import {\n  FPS,\n  IS_HIDPI,\n  horizonLineConfig\n} from 'Configs';\n\nclass HorizonLine {\n  constructor(canvas) {\n    this.spritePos = {x: 0, y: 0};\n    this.sourceDimensions = HorizonLine.sourceDimensions;\n    this.sprite = null;\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.dimensions = HorizonLine.dimensions;\n    this.sourceXPos = [this.spritePos.x, this.spritePos.x +\n        this.sourceDimensions.WIDTH];\n    this.xPos = [];\n    this.yPos = 0;\n    this.bumpThreshold = HorizonLine.BUMP_THRESHOLD;\n\n    this.setSourceDimensions();\n    this.setSprite();\n    this.draw();\n  }\n\n  /**\n   * Set the source dimensions of the horizon line.\n   */\n  setSourceDimensions() {\n\n    for (let dimension in HorizonLine.sourceDimensions) {\n      if (IS_HIDPI) {\n        if (dimension != 'YPOS') {\n          this.sourceDimensions[dimension] = HorizonLine.sourceDimensions[dimension] * 2;\n        }\n      } else {\n        this.sourceDimensions[dimension] = HorizonLine.sourceDimensions[dimension];\n      }\n\n      this.dimensions[dimension] = HorizonLine.dimensions[dimension];\n    }\n\n    this.xPos = [0, HorizonLine.dimensions.WIDTH];\n    this.yPos = HorizonLine.dimensions.YPOS;\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(HorizonLine.spriteIds.HDPI.HORIZON);\n    } else {\n      this.sprite = document.getElementById(HorizonLine.spriteIds.LDPI.HORIZON)\n    }\n  }\n\n  /**\n   * Return the crop x position of a type.\n   */\n  getRandomType() {\n    return Math.random() > this.bumpThreshold ? this.sourceDimensions.WIDTH : 0;\n  }\n\n  /**\n   * Draw the horizon line.\n   */\n  draw() {\n    this.canvasCtx.drawImage(this.sprite, this.sourceXPos[0],\n      this.spritePos.y,\n      this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n      this.xPos[0], this.yPos,\n      this.dimensions.WIDTH, this.dimensions.HEIGHT);\n\n    this.canvasCtx.drawImage(this.sprite, this.sourceXPos[1],\n      this.spritePos.y,\n      this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n      this.xPos[1], this.yPos,\n      this.dimensions.WIDTH, this.dimensions.HEIGHT);\n  }\n\n  /**\n   * Update the x position of an indivdual piece of the line.\n   * @param {number} pos Line position.\n   * @param {number} increment\n   */\n  updateXPos(pos, increment) {\n    let line1 = pos;\n    let line2 = pos == 0 ? 1 : 0;\n    this.xPos[line1] -= increment;\n    this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH;\n\n    if (this.xPos[line1] <= -this.dimensions.WIDTH) {\n      this.xPos[line1] += this.dimensions.WIDTH *2 ;\n      this.xPos[line2] = this.xPos[line1] - this.dimensions.WIDTH;\n      this.sourceXPos[line1] = this.getRandomType() + this.spritePos.x;\n    }\n\n  }\n\n  /**\n   * Update the horizon line.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  update(deltaTime, speed) {\n    let increment = Math.floor(speed * (FPS / 1000) * deltaTime);\n\n    if (this.xPos[0] <= 0) {\n      this.updateXPos(0, increment);\n    } else {\n      this.updateXPos(1, increment);\n    }\n    this.draw();\n  }\n\n  /**\n   * Reset horizon to the starting position.\n   */\n  reset() {\n    this.xPos[0] = 0;\n    this.xPos[1] = HorizonLine.dimensions.WIDTH;\n  }\n};\n\nHorizonLine = Object.assign(HorizonLine, horizonLineConfig);\n\nexport default HorizonLine;\n\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/horizonLine.js","import NightMode from './nightMode';\n\nexport default NightMode;\n\n\n// WEBPACK FOOTER //\n// ./src/nightMode/index.js","import { \n  nightModeConfig,\n  IS_HIDPI,\n  DIMENSIONS,\n} from 'Configs';\nimport { getRandomNum } from '../service';\n\nclass NightMode {\n  constructor(canvas) {\n    this.moonSpritePos = {x:0, y:0};\n    this.starSpritePos = {x:0, y:0};\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.xPos = DIMENSIONS.WIDTH - 50;\n    this.yPos = 30;\n    this.currentPhase = 0;\n    this.opacity = 0;\n    this.containerWidth = DIMENSIONS.WIDTH;\n    this.stars = [];\n    this.drawStars = false;\n\n    this.setSprite();\n    this.placeStars();\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.moonSprite = document.getElementById(NightMode.spriteIds.HDPI.MOON);\n      this.starSprite = document.getElementById(NightMode.spriteIds.HDPI.STAR)\n    } else {\n      this.moonSprite = document.getElementById(NightMode.spriteIds.LDPI.MOON);\n      this.starSprite = document.getElementById(NightMode.spriteIds.LDPI.STAR)\n    }\n  }\n\n  update(activated, delta) {\n    // Moon phase.\n    if (activated && this.opacity == 0) {\n      this.currentPhase++;\n\n      if (this.currentPhase >= NightMode.phases.length) {\n        this.currentPhase = 0;\n      }\n    }\n\n    // Fade in / out.\n    if (activated && (this.opacity < 1 || this.opacity == 0)) {\n      this.opacity += NightMode.config.FADE_SPEED;\n    } else if (this.opacity > 0) {\n      this.opacity -= NightMode.config.FADE_SPEED;\n    }\n\n    // Set moon positioning.\n    if (this.opacity > 0) {\n      this.xPos = this.updateXPos(this.xPos, NightMode.config.MOON_SPEED);\n\n      // Update stars.\n      if (this.drawStars) {\n        for (let i = 0; i < NightMode.config.NUM_STARS; i++) {\n          this.stars[i].x = this.updateXPos(this.stars[i].x,\n            NightMode.config.STAR_SPEED);\n        }\n      }\n      this.draw();\n    } else {\n      this.opacity = 0;\n      this.placeStars();\n    }\n    this.drawStars = true;\n  }\n\n  updateXPos(currentPos, speed) {\n    if (currentPos < -NightMode.config.WIDTH) {\n      currentPos = this.containerWidth;\n    } else {\n      currentPos -= speed;\n    }\n    return currentPos;\n  }\n\n  draw() {\n    let moonSourceWidth = this.currentPhase == 3 ? NightMode.sourceDimensions.moon.WIDTH * 2 :\n        NightMode.sourceDimensions.moon.WIDTH;\n    let moonSourceHeight = NightMode.sourceDimensions.moon.HEIGHT;\n    let moonSourceX = this.moonSpritePos.x + NightMode.phases[this.currentPhase];\n    let moonOutputWidth = this.currentPhase == 3 ? NightMode.config.WIDTH * 2 :\n        NightMode.config.WIDTH;\n    let sourceStarSize = NightMode.sourceDimensions.STAR_SIZE;\n    let starSourceX = this.starSpritePos.x;\n\n    if (IS_HIDPI) {\n        moonSourceWidth *= 2;\n        moonSourceHeight *= 2;\n        moonSourceX = this.moonSpritePos.x +\n            (NightMode.phases[this.currentPhase] * 2);\n        sourceStarSize *= 2;\n        starSourceX = this.starSpritePos.x;\n    }\n\n    this.canvasCtx.save();\n    this.canvasCtx.globalAlpha = this.opacity;\n\n    // Stars.\n    if (this.drawStars) {\n        for (let i = 0; i < NightMode.config.NUM_STARS; i++) {\n            this.canvasCtx.drawImage(this.starSprite,\n                starSourceX, this.stars[i].sourceY, sourceStarSize, sourceStarSize,\n                Math.round(this.stars[i].x), this.stars[i].y,\n                NightMode.config.STAR_SIZE, NightMode.config.STAR_SIZE);\n        }\n    }\n\n    // Moon.\n    this.canvasCtx.drawImage(this.moonSprite, moonSourceX,\n        this.moonSpritePos.y, moonSourceWidth, moonSourceHeight,\n        Math.round(this.xPos), this.yPos,\n        moonOutputWidth, NightMode.config.HEIGHT);\n\n    this.canvasCtx.globalAlpha = 1;\n    this.canvasCtx.restore();\n  }\n\n  // Do star placement.\n  placeStars() {\n    let segmentSize = Math.round(this.containerWidth /\n      NightMode.config.NUM_STARS);\n\n    for (let i = 0; i < NightMode.config.NUM_STARS; i++) {\n      this.stars[i] = {};\n      this.stars[i].x = getRandomNum(segmentSize * i, segmentSize * (i + 1));\n      this.stars[i].y = getRandomNum(0, NightMode.config.STAR_MAX_Y);\n\n      if (IS_HIDPI) {\n        this.stars[i].sourceY = this.starSpritePos.y +\n          NightMode.config.STAR_SIZE * 2 * i;\n      } else {\n        this.stars[i].sourceY = this.starSpritePos.y +\n          NightMode.config.STAR_SIZE * i;\n      }\n    }\n  }\n\n  reset() {\n    this.currentPhase = 0;\n    this.opacity = 0;\n    this.update(false);\n  }\n};\n\nNightMode = Object.assign(NightMode, nightModeConfig);\n\nexport default NightMode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nightMode/nightMode.js","import {\n  cloudConfig,\n  IS_HIDPI,\n  DIMENSIONS,\n} from 'Configs';\nimport { getRandomNum } from '../service';\n\nclass Cloud {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.spritePos = { x: 0, y: 0 };\n    this.containerWidth = DIMENSIONS.WIDTH;\n    this.xPos = DIMENSIONS.WIDTH;\n    this.yPos = 0;\n    this.remove = false;\n\n    this.sourceDimensions = Cloud.sourceDimensions;\n\n    this.sprite = Cloud.CLOUD_SPRITE;\n\n    this.init();\n  }\n\n  init() {\n    this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL,\n      Cloud.config.MIN_SKY_LEVEL);\n    this.draw();\n  }\n\n  /**\n   * Draw the cloud.\n   */\n  draw() {\n    this.canvasCtx.save();\n    \n    let sourceWidth = this.sourceDimensions.WIDTH;\n    let sourceHeight = this.sourceDimensions.HEIGHT;\n\n    if (IS_HIDPI) {\n      sourceWidth = sourceWidth * 2;\n      sourceHeight = sourceHeight * 2;\n    }\n\n    this.canvasCtx.drawImage(this.sprite, this.spritePos.x,\n      this.spritePos.y,\n      sourceWidth, sourceHeight,\n      this.xPos, this.yPos,\n      Cloud.config.WIDTH, Cloud.config.HEIGHT);\n\n    this.canvasCtx.restore();\n  }\n\n  /**\n   * Update the cloud position.\n   * @param {number} speed\n   */\n  update(speed) {\n    if (!this.remove) {\n      this.xPos -= Math.ceil(speed);\n      this.draw();\n\n      // Mark as removeable if no longer in the canvas.\n      if (!this.isVisible()) {\n        this.remove = true;\n      }\n    }\n  }\n\n  /**\n   * Check if the cloud is visible on the stage.\n   * @return {boolean}\n   */\n  isVisible() {\n    return this.xPos + Cloud.config.WIDTH > 0;\n  }\n};\n\nCloud = Object.assign(Cloud, cloudConfig);\n\nCloud.initSprites = () => {\n  if (IS_HIDPI) {\n    Cloud.CLOUD_SPRITE = document.getElementById(Cloud.spriteIds.HDPI.CLOUD);\n  } else {\n    Cloud.CLOUD_SPRITE = document.getElementById(Cloud.spriteIds.LDPI.CLOUD);\n  }\n};\n\nexport default Cloud;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cloud/cloud.js","import {\n  obstacleConfig,\n  IS_MOBILE,\n  IS_HIDPI,\n  FPS,\n  DIMENSIONS,\n} from 'Configs';\nimport { CollisionBox } from '../collision';\nimport { getRandomNum } from '../service';\n\nclass Obstacle {\n  constructor(canvasCtx, type, speed) {\n    this.canvasCtx = canvasCtx;\n    this.spritePos = {x:0, y:0};\n    this.typeConfig = type;\n    this.gapCoefficient = Obstacle.GAP_COEFFICIENT;\n    this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH);\n    this.dimensions = DIMENSIONS;\n    this.remove = false;\n    this.xPos = DIMENSIONS.WIDTH + (type.width || 0);\n    this.yPos = 0;\n    this.width = 0;\n    this.collisionBoxes = [];\n    this.gap = 0;\n    this.speedOffset = 0;\n\n    // For animated obstacles.\n    this.currentFrame = 0;\n    this.timer = 0;\n\n    this.setSprite(type);\n    this.init(speed);\n  }\n\n  setSprite({type}) {\n    this.sprite = Obstacle[`${type}_SPRITE`];\n  }\n\n  init(speed) {\n    // Only allow sizing if we're at the right speed.\n    if (this.size > 1 && this.typeConfig.multipleSpeed > speed) {\n      this.size = 1;\n    }\n\n    this.collisionBoxes = this.typeConfig.collisionBoxes[this.size]; \n\n    this.width = this.typeConfig.width * this.size;\n\n    // Check if obstacle can be positioned at various heights.\n    if (Array.isArray(this.typeConfig.yPos)) {\n      let yPosConfig = IS_MOBILE ? this.typeConfig.yPosMobile :\n        this.typeConfig.yPos;\n      this.yPos = yPosConfig[getRandomNum(0, yPosConfig.length - 1)];\n    } else {\n      this.yPos = this.typeConfig.yPos;\n    }\n\n    this.draw();\n\n    // For obstacles that go at a different speed from the horizon.\n    if (this.typeConfig.speedOffset) {\n      this.speedOffset = Math.random() > 0.5 ? this.typeConfig.speedOffset :\n        -this.typeConfig.speedOffset;\n    }\n\n    this.gap = this.getGap(this.gapCoefficient, speed);\n  }\n\n  /**\n   * Draw and crop based on size.\n   */\n  draw() {\n    let sourceWidth = this.typeConfig.sourceDimensions.width;\n    let sourceHeight = this.typeConfig.sourceDimensions.height;\n\n    if (IS_HIDPI) {\n      sourceWidth = sourceWidth * 2;\n      sourceHeight = sourceHeight * 2;\n    }\n\n    // X position in sprite.\n    let sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1)) +\n      this.spritePos.x;\n\n    // Animation frames.\n    if (this.currentFrame > 0) {\n      sourceX += sourceWidth * this.currentFrame;\n    }\n\n    this.canvasCtx.drawImage(this.sprite,\n      sourceX, this.spritePos.y,\n      sourceWidth * this.size, sourceHeight,\n      this.xPos, this.yPos,\n      this.typeConfig.width * this.size, this.typeConfig.height);\n  }\n\n  /**\n   * Obstacle frame update.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  update(deltaTime, speed) {\n    if (!this.remove) {\n      if (this.typeConfig.speedOffset) {\n        speed += this.speedOffset;\n      }\n      this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime);\n\n      // Update frame\n      if (this.typeConfig.numFrames) {\n        this.timer += deltaTime;\n        if (this.timer >= this.typeConfig.frameRate) {\n          this.currentFrame =\n            this.currentFrame == this.typeConfig.numFrames - 1 ?\n            0 : this.currentFrame + 1;\n          this.timer = 0;\n        }\n      }\n      this.draw();\n\n      if (!this.isVisible()) {\n        this.remove = true;\n      }\n    }\n  }\n\n  /**\n   * Calculate a random gap size.\n   * - Minimum gap gets wider as speed increses\n   * @param {number} gapCoefficient\n   * @param {number} speed\n   * @return {number} The gap size.\n   */\n  getGap(gapCoefficient, speed) {\n    let minGap = Math.round(this.width * speed +\n      this.typeConfig.minGap * gapCoefficient);\n    let maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT);\n    return getRandomNum(minGap, maxGap);\n  }\n\n  /**\n   * Check if obstacle is visible.\n   * @return {boolean} Whether the obstacle is in the game area.\n   */\n  isVisible() {\n    return this.xPos + this.width > 0;\n  }\n\n};\n\nObstacle = Object.assign(Obstacle, obstacleConfig);\n\nObstacle.initSprites = () => {\n  for (let {type} of Obstacle.types) {\n    if (IS_HIDPI) {\n      Obstacle[`${type}_SPRITE`] = document.getElementById(Obstacle.spriteIds.HDPI[type])\n    } else {\n      Obstacle[`${type}_SPRITE`] = document.getElementById(Obstacle.spriteIds.LDPI[type]);\n    }  \n  }\n};\n\nexport default Obstacle;\n\n\n\n// WEBPACK FOOTER //\n// ./src/obstacle/obstacle.js","import Trex from './trex';\n\nexport default Trex;\n\n\n// WEBPACK FOOTER //\n// ./src/trex/index.js","import { \n  trexConfig,\n  DIMENSIONS,\n  FPS,\n  IS_HIDPI\n} from 'Configs';\nimport { getTimeStamp } from '../service';\n\nclass Trex {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.spritePos = {x:0, y:0};\n    this.xPos = 0;\n    this.yPos = 0;\n    // Position when on the ground.\n    this.groundYPos = 0;\n    this.currentFrame = 0;\n    this.currentAnimFrames = [];\n    this.blinkDelay = 0;\n    this.blinkCount = 0;\n    this.animStartTime = 0;\n    this.timer = 0;\n    this.msPerFrame = 2000 / FPS;\n    this.config = Trex.config;\n    this.sourceDimensions = Trex.sourceDimensions;\n    // Current status.\n    this.status = Trex.status.WAITING;\n\n    this.jumping = false;\n    this.ducking = false;\n    this.jumpVelocity = 0;\n    this.reachedMinHeight = false;\n    this.speedDrop = false;\n    this.jumpCount = 0;\n    this.jumpspotX = 0;\n\n    this.setSprite();\n    this.init();\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(Trex.spriteIds.HDPI.TREX);\n    } else {\n      this.sprite = document.getElementById(Trex.spriteIds.LDPI.TREX)\n    }\n  }\n\n  init() {\n    this.groundYPos = DIMENSIONS.HEIGHT - this.config.HEIGHT -\n      this.config.BOTTOM_PAD;\n    this.yPos = this.groundYPos;\n    this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT;\n\n    this.draw(0, 0);\n    this.update(0, Trex.status.WAITING);\n  }\n\n  /**\n   * Setter for the jump velocity.\n   * The approriate drop velocity is also set.\n   */\n  setJumpVelocity(setting) {\n    this.config.INIITAL_JUMP_VELOCITY = -setting;\n    this.config.DROP_VELOCITY = -setting / 2;\n  }\n\n  /**\n   * Set the animation status.\n   * @param {!number} deltaTime\n   * @param {Trex.status} status Optional status to switch to.\n   */\n  update(deltaTime, opt_status) {\n    this.timer += deltaTime;\n\n    // Update the status.\n    if (opt_status) {\n      this.status = opt_status;\n      this.currentFrame = 0;\n      this.msPerFrame = Trex.animFrames[opt_status].msPerFrame;\n      this.currentAnimFrames = Trex.animFrames[opt_status].frames;\n\n      if (opt_status == Trex.status.WAITING) {\n        this.animStartTime = getTimeStamp();\n        this.setBlinkDelay();\n      }\n    }\n\n    // Game intro animation, T-rex moves in from the left.\n    if (this.playingIntro && this.xPos < this.config.START_X_POS) {\n      this.xPos += Math.round((this.config.START_X_POS /\n        this.config.INTRO_DURATION) * deltaTime);\n    }\n\n    if (this.status == Trex.status.WAITING) {\n      this.blink(getTimeStamp());\n    } else {\n      this.draw(this.currentAnimFrames[this.currentFrame], 0);\n    }\n\n    // Update the frame position.\n    if (this.timer >= this.msPerFrame) {\n      this.currentFrame = this.currentFrame ==\n        this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\n      this.timer = 0;\n    }\n\n    // Speed drop becomes duck if the down key is still being pressed.\n    if (this.speedDrop && this.yPos == this.groundYPos) {\n      this.speedDrop = false;\n      this.setDuck(true);\n    }\n  }\n\n  /**\n   * Draw the t-rex to a particular position.\n   * @param {number} x\n   * @param {number} y\n   */\n  draw(x, y) {\n    let sourceX = x;\n    let sourceY = y;\n\n    let sourceWidth = this.ducking && this.status != Trex.status.CRASHED ?\n      this.sourceDimensions.WIDTH_DUCK : this.sourceDimensions.WIDTH;\n    let sourceHeight = this.sourceDimensions.HEIGHT;\n\n    if (IS_HIDPI) {\n      sourceX *= 2;\n      sourceY *= 2;\n      sourceWidth *= 2;\n      sourceHeight *= 2;\n    }\n\n    // Adjustments for sprite sheet position.\n    sourceX += this.spritePos.x;\n    sourceY += this.spritePos.y;\n\n    // Ducking.\n    if (this.ducking && this.status != Trex.status.CRASHED) {\n      this.canvasCtx.drawImage(this.sprite, sourceX, sourceY,\n        sourceWidth, sourceHeight,\n        this.xPos, this.yPos,\n        this.config.WIDTH_DUCK, this.config.HEIGHT);\n    } else {\n      // Crashed whilst ducking. Trex is standing up so needs adjustment.\n      if (this.ducking && this.status == Trex.status.CRASHED) {\n        this.xPos++;\n      }\n      // Standing / running\n      this.canvasCtx.drawImage(this.sprite, sourceX, sourceY,\n        sourceWidth, sourceHeight,\n        this.xPos, this.yPos,\n        this.config.WIDTH, this.config.HEIGHT);\n    }\n  }\n\n  /**\n   * Sets a random time for the blink to happen.\n   */\n  setBlinkDelay() {\n    this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING);\n  }\n\n  /**\n   * Make t-rex blink at random intervals.\n   * @param {number} time Current time in milliseconds.\n   */\n  blink(time) {\n    let deltaTime = time - this.animStartTime;\n\n    if (deltaTime >= this.blinkDelay) {\n      this.draw(this.currentAnimFrames[this.currentFrame], 0);\n\n      if (this.currentFrame == 1) {\n        // Set new random delay to blink.\n        this.setBlinkDelay();\n        this.animStartTime = time;\n        this.blinkCount++;\n      }\n    }\n  }\n\n  /**\n   * Initialise a jump.\n   * @param {number} speed\n   */\n  startJump(speed) {\n    if (!this.jumping) {\n      this.update(0, Trex.status.JUMPING);\n      // Tweak the jump velocity based on the speed.\n      this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY - (speed / 10);\n      this.jumping = true;\n      this.reachedMinHeight = false;\n      this.speedDrop = false;\n    }\n  }\n\n  /**\n   * Jump is complete, falling down.\n   */\n  endJump() {\n    if (this.reachedMinHeight &&\n      this.jumpVelocity < this.config.DROP_VELOCITY) {\n      this.jumpVelocity = this.config.DROP_VELOCITY;\n    }\n  }\n\n  /**\n   * Update frame for a jump.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  updateJump(deltaTime, speed) {\n    let msPerFrame = Trex.animFrames[this.status].msPerFrame;\n    let framesElapsed = deltaTime / msPerFrame;\n\n    // Speed drop makes Trex fall faster.\n    if (this.speedDrop) {\n      this.yPos += Math.round(this.jumpVelocity *\n        this.config.SPEED_DROP_COEFFICIENT * framesElapsed);\n    } else {\n      this.yPos += Math.round(this.jumpVelocity * framesElapsed);\n    }\n\n    this.jumpVelocity += this.config.GRAVITY * framesElapsed;\n\n    // Minimum height has been reached.\n    if (this.yPos < this.minJumpHeight || this.speedDrop) {\n      this.reachedMinHeight = true;\n    }\n\n    // Reached max height\n    if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) {\n      this.endJump();\n    }\n\n    // Back down at ground level. Jump completed.\n    if (this.yPos > this.groundYPos) {\n      this.reset();\n      this.jumpCount++;\n    }\n\n    this.update(deltaTime);\n  }\n\n  /**\n   * Set the speed drop. Immediately cancels the current jump.\n   */\n  setSpeedDrop() {\n    this.speedDrop = true;\n    this.jumpVelocity = 1;\n  }\n\n  /**\n   * @param {boolean} isDucking.\n   */\n  setDuck(isDucking) {\n    if (isDucking && this.status != Trex.status.DUCKING) {\n      this.update(0, Trex.status.DUCKING);\n      this.ducking = true;\n    } else if (this.status == Trex.status.DUCKING) {\n      this.update(0, Trex.status.RUNNING);\n      this.ducking = false;\n    }\n  }\n\n  /**\n   * Reset the t-rex to running at start of game.\n   */\n  reset() {\n    this.yPos = this.groundYPos;\n    this.jumpVelocity = 0;\n    this.jumping = false;\n    this.ducking = false;\n    this.update(0, Trex.status.RUNNING);\n    this.midair = false;\n    this.speedDrop = false;\n    this.jumpCount = 0;\n  }\n\n\n}\n\nTrex = Object.assign(Trex, trexConfig);\n\nexport default Trex;\n\n\n// WEBPACK FOOTER //\n// ./src/trex/trex.js","import DistanceMeter from './distanceMeter';\n\nexport default DistanceMeter;\n\n\n// WEBPACK FOOTER //\n// ./src/distanceMeter/index.js","import { \n  distanceMeterConfig,\n  DIMENSIONS,\n  IS_HIDPI,\n} from 'Configs';\n\nclass DistanceMeter {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.spritePos = {x:0, y:0};\n    this.x = 0;\n    this.y = 5;\n\n    this.maxScore = 0;\n    this.highScore = 0;\n\n    this.digits = [];\n    this.acheivement = false;\n    this.defaultString = '';\n    this.flashTimer = 0;\n    this.flashIterations = 0;\n\n    this.config = DistanceMeter.config;\n    this.maxScoreUnits = this.config.MAX_DISTANCE_UNITS;\n    \n    this.setSprite();\n\n    this.init(DIMENSIONS.WIDTH);\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(DistanceMeter.spriteIds.HDPI.TEXT_SPRITE);\n    } else {\n      this.sprite = document.getElementById(DistanceMeter.spriteIds.LDPI.TEXT_SPRITE)\n    }\n  }\n\n\n  init(width) {\n    let maxDistanceStr = '';\n\n    this.calcXPos(width);\n    this.maxScore = this.maxScoreUnits;\n\n    for (let i = 0; i < this.maxScoreUnits; i++) {\n      this.draw(i, 0);\n      this.defaultString += '0';\n      maxDistanceStr += '9';\n    }\n\n    this.maxScore = parseInt(maxDistanceStr);\n  }\n\n  /**\n   * Calculate the xPos in the canvas.\n   * @param {number} canvasWidth\n   */\n  calcXPos(canvasWidth) {\n    this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH *\n      (this.maxScoreUnits + 1));\n  }\n\n  /**\n   * Draw a digit to canvas.\n   * @param {number} digitPos Position of the digit.\n   * @param {number} value Digit value 0-9.\n   * @param {boolean} opt_highScore Whether drawing the high score.\n   */\n  draw(digitPos, value, opt_highScore) {\n    let sourceWidth = DistanceMeter.dimensions.WIDTH;\n    let sourceHeight = DistanceMeter.dimensions.HEIGHT;\n    let sourceX = DistanceMeter.dimensions.WIDTH * value;\n    let sourceY = 0;\n\n    let targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH;\n    let targetY = this.y;\n    let targetWidth = DistanceMeter.dimensions.WIDTH;\n    let targetHeight = DistanceMeter.dimensions.HEIGHT;\n\n    // For high DPI we 2x source values.\n    if (IS_HIDPI) {\n      sourceWidth *= 2;\n      sourceHeight *= 2;\n      sourceX *= 2;\n    }\n\n    sourceX += this.spritePos.x;\n    sourceY += this.spritePos.y;\n\n    this.canvasCtx.save();\n\n    if (opt_highScore) {\n      // Left of the current score.\n      let highScoreX = this.x - (this.maxScoreUnits * 2) *\n        DistanceMeter.dimensions.WIDTH;\n      this.canvasCtx.translate(highScoreX, this.y);\n    } else {\n      this.canvasCtx.translate(this.x, this.y);\n    }\n\n    this.canvasCtx.drawImage(this.sprite, sourceX, sourceY,\n      sourceWidth, sourceHeight,\n      targetX, targetY,\n      targetWidth, targetHeight\n    );\n\n    this.canvasCtx.restore();\n  }\n\n  /**\n   * Covert pixel distance to a 'real' distance.\n   * @param {number} distance Pixel distance ran.\n   * @return {number} The 'real' distance ran.\n   */\n  getActualDistance(distance) {\n    return distance ? Math.round(distance * this.config.COEFFICIENT) : 0;\n  }\n\n  /**\n   * Update the distance meter.\n   * @param {number} distance\n   * @param {number} deltaTime\n   * @return {boolean} Whether the acheivement sound fx should be played.\n   */\n  update(deltaTime, distance) {\n    let paint = true;\n    let playSound = false;\n\n    if (!this.acheivement) {\n      distance = this.getActualDistance(distance);\n      // Score has gone beyond the initial digit count.\n      if (distance > this.maxScore && this.maxScoreUnits ==\n        this.config.MAX_DISTANCE_UNITS) {\n        this.maxScoreUnits++;\n        this.maxScore = parseInt(this.maxScore + '9');\n      } else {\n        this.distance = 0;\n      }\n\n      if (distance > 0) {\n        // Acheivement unlocked\n        if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) {\n          // Flash score and play sound.\n          this.acheivement = true;\n          this.flashTimer = 0;\n          playSound = true;\n        }\n\n        // Create a string representation of the distance with leading 0.\n        let distanceStr = (this.defaultString +\n          distance).substr(-this.maxScoreUnits);\n        this.digits = distanceStr.split('');\n      } else {\n        this.digits = this.defaultString.split('');\n      }\n    } else {\n      // Control flashing of the score on reaching acheivement.\n      if (this.flashIterations <= this.config.FLASH_ITERATIONS) {\n        this.flashTimer += deltaTime;\n\n        if (this.flashTimer < this.config.FLASH_DURATION) {\n          paint = false;\n        } else if (this.flashTimer >\n          this.config.FLASH_DURATION * 2) {\n          this.flashTimer = 0;\n          this.flashIterations++;\n        }\n      } else {\n        this.acheivement = false;\n        this.flashIterations = 0;\n        this.flashTimer = 0;\n      }\n    }\n\n    // Draw the digits if not flashing.\n    if (paint) {\n      for (let i = this.digits.length - 1; i >= 0; i--) {\n        this.draw(i, parseInt(this.digits[i]));\n      }\n    }\n\n    this.drawHighScore();\n    return playSound;\n  }\n\n  /**\n   * Draw the high score.\n   */\n  drawHighScore() {\n    this.canvasCtx.save();\n    this.canvasCtx.globalAlpha = .8;\n    for (let i = this.highScore.length - 1; i >= 0; i--) {\n      this.draw(i, parseInt(this.highScore[i], 10), true);\n    }\n    this.canvasCtx.restore();\n  }\n\n  /**\n   * Set the highscore as a array string.\n   * Position of char in the sprite: H - 10, I - 11.\n   * @param {number} distance Distance ran in pixels.\n   */\n  setHighScore(distance) {\n    distance = this.getActualDistance(distance);\n    let highScoreStr = (this.defaultString +\n      distance).substr(-this.maxScoreUnits);\n\n    this.highScore = ['10', '11', ''].concat(highScoreStr.split(''));\n  }\n\n  /**\n   * Reset the distance meter back to '00000'.\n   */\n  reset() {\n    this.update(0);\n    this.acheivement = false;\n  }\n};\n\nDistanceMeter = Object.assign(DistanceMeter, distanceMeterConfig);\n\nexport default DistanceMeter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/distanceMeter/distanceMeter.js","import GameOverPanel from './gameOverPanel';\n\nexport default GameOverPanel;\n\n\n// WEBPACK FOOTER //\n// ./src/gameOverPanel/index.js","import { \n  gameOverPanelConfig,\n  DIMENSIONS,\n  IS_HIDPI,\n} from 'Configs';\n\nclass GameOverPanel {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.canvasDimensions = DIMENSIONS;\n    this.textImgPos = {x:0, y:0};\n    this.restartImgPos = {x:0, y:0};\n\n    this.setSprites();\n\n    this.draw();\n  }\n  \n   setSprites() {\n    if (IS_HIDPI) {\n      this.textSprite = document.getElementById(GameOverPanel.spriteIds.HDPI.GAME_OVER);\n      this.restartSprite = document.getElementById(GameOverPanel.spriteIds.HDPI.RESTART);\n    } else {\n      this.textSprite = document.getElementById(GameOverPanel.spriteIds.LDPI.GAME_OVER);\n      this.restartSprite = document.getElementById(GameOverPanel.spriteIds.LDPI.RESTART);\n    }\n  }\n\n  updateDimensions(width, opt_height) {\n    this.canvasDimensions.WIDTH = width;\n    if (opt_height) {\n      this.canvasDimensions.HEIGHT = opt_height;\n    }\n  }\n\n  /**\n   * Draw the panel.\n   */\n  draw() {\n    let dimensions = GameOverPanel.dimensions;\n\n    let centerX = this.canvasDimensions.WIDTH / 2;\n\n    // Game over text.\n    let textSourceX = dimensions.TEXT_X;\n    let textSourceY = dimensions.TEXT_Y;\n    let textSourceWidth = dimensions.TEXT_WIDTH;\n    let textSourceHeight = dimensions.TEXT_HEIGHT;\n\n    let textTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2));\n    let textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3);\n    let textTargetWidth = dimensions.TEXT_WIDTH;\n    let textTargetHeight = dimensions.TEXT_HEIGHT;\n\n    let restartSourceWidth = dimensions.RESTART_WIDTH;\n    let restartSourceHeight = dimensions.RESTART_HEIGHT;\n    let restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2);\n    let restartTargetY = this.canvasDimensions.HEIGHT / 2;\n\n    if (IS_HIDPI) {\n      textSourceY *= 2;\n      textSourceX *= 2;\n      textSourceWidth *= 2;\n      textSourceHeight *= 2;\n      restartSourceWidth *= 2;\n      restartSourceHeight *= 2;\n    }\n\n    textSourceX += this.textImgPos.x;\n    textSourceY += this.textImgPos.y;\n\n    // Game over text from sprite.\n    this.canvasCtx.drawImage(this.textSprite,\n      textSourceX, textSourceY, textSourceWidth, textSourceHeight,\n      textTargetX, textTargetY, textTargetWidth, textTargetHeight);\n\n    // Restart button.\n    this.canvasCtx.drawImage(this.restartSprite,\n      this.restartImgPos.x, this.restartImgPos.y,\n      restartSourceWidth, restartSourceHeight,\n      restartTargetX, restartTargetY, dimensions.RESTART_WIDTH,\n      dimensions.RESTART_HEIGHT);\n  }\n};\n\nGameOverPanel = Object.assign(GameOverPanel, gameOverPanelConfig);\n\nexport default GameOverPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gameOverPanel/gameOverPanel.js","import { runnerConfig } from 'Configs';\n\nclass ImagesLoader {\n  constructor(ids) {\n    this.images = [];\n    this.loadedCallback = null;\n    this.callbackCalled = false;\n    this.setImages(ids);\n  }\n\n  setImages(ids) {\n    for (let name in ids){\n      this.images.push(document.getElementById(ids[name]));\n    }\n  }\n\n  checkAll() {\n    return this.images.reduce((accumulated, current) => {\n      return accumulated && current.complete;\n    }, true);\n  }\n\n  addEventListeners () {\n    for (let img of this.images) {\n      img.addEventListener(runnerConfig.events.LOAD,() => {\n        if (this.checkAll() && !this.callbackCalled) {\n          this.callbackCalled = true;\n          this.loadedCallback();\n        }\n      });\n    }\n  }\n\n  onLoaded(callback) {\n    this.loadedCallback = callback;\n    this.addEventListeners();\n  }\n};\n\nexport default ImagesLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runner/imagesLoader.js"],"sourceRoot":""}