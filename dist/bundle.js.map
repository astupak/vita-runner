{"version":3,"sources":["webpack:///webpack/bootstrap 8cc4ee4bb3b6318b6734","webpack:///./src/config/index.js","webpack:///./src/service.js","webpack:///./src/collision/index.js","webpack:///./src/config/consts.js","webpack:///./src/index.js","webpack:///./src/runner/index.js","webpack:///./src/runner/runner.js","webpack:///./src/config/trex-config.js","webpack:///./src/collision/collisionBox.js","webpack:///./src/config/cloud-config.js","webpack:///./src/config/runner-config.js","webpack:///./src/config/horizon-config.js","webpack:///./src/config/obstacle-config.js","webpack:///./src/config/nightMode-config.js","webpack:///./src/config/horizonLine-config.js","webpack:///./src/config/distanceMeter-config.js","webpack:///./src/config/gameOverPanel-config.js","webpack:///./src/horizon/index.js","webpack:///./src/horizon/horizon.js","webpack:///./src/horizon/horizonLine.js","webpack:///./src/nightMode/index.js","webpack:///./src/nightMode/nightMode.js","webpack:///./src/cloud/index.js","webpack:///./src/cloud/cloud.js","webpack:///./src/obstacle/index.js","webpack:///./src/obstacle/obstacle.js","webpack:///./src/trex/index.js","webpack:///./src/trex/trex.js","webpack:///./src/distanceMeter/index.js","webpack:///./src/distanceMeter/distanceMeter.js","webpack:///./src/runner/imagesLoader.js"],"names":["trexConfig","cloudConfig","runnerConfig","horizonConfig","obstacleConfig","nightModeConfig","horizonLineConfig","distanceMeterConfig","gameOverPanelConfig","getRandomNum","vibrate","createCanvas","decodeBase64ToArrayBuffer","getTimeStamp","classes","min","max","Math","floor","random","duration","window","navigator","container","width","height","opt_classname","canvas","document","createElement","className","CANVAS","appendChild","base64String","len","length","str","atob","arrayBuffer","ArrayBuffer","bytes","Uint8Array","i","charCodeAt","buffer","Date","getTime","performance","now","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIMENSIONS","WIDTH","HEIGHT","FPS","IS_HIDPI","devicePixelRatio","IS_IOS","test","platform","IS_MOBILE","userAgent","IS_TOUCH_ENABLED","onDocumentLoad","addEventListener","Runner","outerContainerId","opt_config","console","log","outerContainerEl","querySelector","containerEl","snackbarEl","detailsButton","config","dimensions","canvasCtx","tRex","distanceMeter","distanceRan","highestScore","time","runningTime","msPerFrame","currentSpeed","SPEED","obstacles","activated","playing","crashed","paused","inverted","invertTimer","resizeTimerId_","playCount","audioBuffer","soundFx","audioContext","images","imagesLoaded","isDisabled","setupDisabledRunner","loadImages","SNACKBAR","textContent","loadTimeData","getValue","events","KEYDOWN","e","keycodes","JUMP","keyCode","classList","add","SNACKBAR_SHOW","bind","setting","value","undefined","setJumpVelocity","setSpeed","imagesLoader","spriteIds","spriteDef","spriteDefinition","HDPI","LDPI","checkAll","init","onLoaded","AudioContext","resourceTemplate","getElementById","RESOURCE_TEMPLATE_ID","content","sound","sounds","soundSrc","src","substr","indexOf","decodeAudioData","index","audioData","opt_speed","speed","mobileSpeed","MOBILE_SPEED_COEFFICIENT","ICON","style","visibility","adjustDimensions","CONTAINER","PLAYER","getContext","fillStyle","fill","updateCanvasScaling","GAP_COEFFICIENT","horizon","TEXT_SPRITE","createTouchController","startListening","update","RESIZE","debounceResize","touchController","TOUCH_CONTROLLER","setInterval","clearInterval","boxStyles","getComputedStyle","padding","Number","paddingLeft","offsetWidth","calcXPos","clearCanvas","ceil","stop","draw","gameOverPanel","updateDimensions","playingIntro","keyframes","styleSheets","insertRule","ANIM_END","startGame","webkitAnimation","restart","VISIBILITY","onVisibilityChange","BLUR","FOCUS","clearRect","updatePending","deltaTime","jumping","updateJump","hasObstacles","CLEAR_TIME","jumpCount","playIntro","collision","MAX_SPEED","ACCELERATION","gameOver","playAchievementSound","playSound","SCORE","INVERT_FADE_DURATION","invertTrigger","invert","actualDistance","getActualDistance","INVERT_DISTANCE","blinkCount","MAX_BLINK_COUNT","scheduleNextUpdate","evtType","TOUCHSTART","MOUSEDOWN","onKeyDown","KEYUP","TOUCHEND","MOUSEUP","onKeyUp","type","removeEventListener","preventDefault","target","loadSounds","errorPageController","trackEasterEgg","ducking","BUTTON_PRESS","startJump","currentTarget","DUCK","setSpeedDrop","setDuck","String","isjumpKey","isRunning","endJump","speedDrop","RESTART","isLeftClickOnCanvas","GAMEOVER_CLEAR_TIME","reset","play","button","raqId","requestAnimationFrame","HIT","acheivement","status","CRASHED","GameOverPanel","setHighScore","cancelAnimationFrame","RUNNING","remove","hidden","webkitHidden","visibilityState","soundBuffer","sourceNode","createBufferSource","connect","destination","start","body","toggle","INVERTED","Object","assign","opt_width","opt_height","context","backingStoreRatio","webkitBackingStorePixelRatio","ratio","oldWidth","oldHeight","scale","SOURCE_WIDTH","SOURCE_HEIGHT","SOURCE_WIDTH_DUCK","SOURCE_HEIGHT_DUCK","DROP_VELOCITY","GRAVITY","HEIGHT_DUCK","INIITAL_JUMP_VELOCITY","INTRO_DURATION","MAX_JUMP_HEIGHT","MIN_JUMP_HEIGHT","SPEED_DROP_COEFFICIENT","SPRITE_WIDTH","START_X_POS","WIDTH_DUCK","collisionBoxes","DUCKING","JUMPING","WAITING","BLINK_TIMING","animFrames","frames","TREX","checkForCollision","createAdjustedCollisionBox","drawCollisionBoxes","boxCompare","CollisionBox","x","y","w","h","obstacle","opt_canvasCtx","obstacleBoxXPos","xPos","tRexBox","yPos","obstacleBox","typeConfig","size","tRexCollisionBoxes","t","adjTrexBox","adjObstacleBox","box","adjustment","save","strokeStyle","strokeRect","restore","tRexBoxX","tRexBoxY","obstacleBoxX","obstacleBoxY","MAX_CLOUD_GAP","MAX_SKY_LEVEL","MIN_CLOUD_GAP","MIN_SKY_LEVEL","CLOUD","BG_CLOUD_SPEED","BOTTOM_PAD","CLOUD_FREQUENCY","INITIAL_JUMP_VELOCITY","MAX_CLOUDS","MAX_OBSTACLE_LENGTH","MAX_OBSTACLE_DUPLICATION","CLICK","LOAD","CACTUS_LARGE","CACTUS_SMALL","HORIZON","MOON","PTERODACTYL","STAR","BUMPY_THRESHOLD","HORIZON_HEIGHT","MAX_GAP_COEFFICIENT","types","multipleSpeed","minGap","minSpeed","yPosMobile","numFrames","frameRate","speedOffset","FADE_SPEED","MOON_SPEED","NUM_STARS","STAR_SIZE","STAR_SPEED","STAR_MAX_Y","phases","YPOS","DEST_WIDTH","MAX_DISTANCE_UNITS","ACHIEVEMENT_DISTANCE","COEFFICIENT","FLASH_DURATION","FLASH_ITERATIONS","TEXT_X","TEXT_Y","TEXT_WIDTH","TEXT_HEIGHT","RESTART_WIDTH","RESTART_HEIGHT","Horizon","obstacleHistory","horizonOffsets","cloudFrequency","nightMode","clouds","cloudSpeed","horizonLine","addCloud","updateObstacles","showNightMode","updateClouds","numClouds","lastCloud","cloudGap","filter","obj","updatedObstacles","slice","shift","lastObstacle","followingObstacleCreated","isVisible","gap","addNewObstacle","obstacleTypeIndex","obstacleType","duplicateObstacleCheck","push","unshift","splice","nextObstacleType","duplicateCount","HorizonLine","spritePos","sprite","sourceDimensions","sourceXPos","bumpThreshold","setSourceDimensions","setSprite","dimension","drawImage","pos","increment","line1","line2","getRandomType","updateXPos","NightMode","moonSpritePos","starSpritePos","currentPhase","opacity","containerWidth","stars","drawStars","placeStars","moonSprite","starSprite","delta","currentPos","moonSourceWidth","moonSourceHeight","moonSourceX","moonOutputWidth","starSize","starSourceX","globalAlpha","sourceY","round","segmentSize","Cloud","sourceWidth","sourceHeight","Obstacle","gapCoefficient","currentFrame","timer","cloneCollisionBoxes","Array","isArray","yPosConfig","getGap","sourceX","maxGap","Trex","groundYPos","currentAnimFrames","blinkDelay","animStartTime","jumpVelocity","reachedMinHeight","jumpspotX","minJumpHeight","opt_status","setBlinkDelay","blink","framesElapsed","isDucking","midair","DistanceMeter","canvasWidth","currentDistance","maxScore","highScore","digits","defaultString","flashTimer","flashIterations","maxScoreUnits","maxDistanceStr","parseInt","digitPos","opt_highScore","distance","paint","distanceStr","split","drawHighScore","highScoreStr","concat","ImagesLoader","ids","loadedCallback","callbackCalled","setImages","name","reduce","accumulated","current","complete","img","callback","addEventListeners"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8cc4ee4bb3b6318b6734","import * as trexConfig from './trex-config';\nimport * as cloudConfig from './cloud-config';\nimport * as runnerConfig from './runner-config';\nimport * as horizonConfig from './horizon-config';\nimport * as obstacleConfig from './obstacle-config';\nimport * as nightModeConfig from './nightMode-config';\nimport * as horizonLineConfig from './horizonLine-config';\nimport * as distanceMeterConfig from './distanceMeter-config';\nimport * as gameOverPanelConfig from './gameOverPanel-config';\n\nexport {\n  trexConfig,\n  cloudConfig,\n  runnerConfig,\n  horizonConfig,\n  obstacleConfig,\n  nightModeConfig,\n  horizonLineConfig,\n  distanceMeterConfig,\n  gameOverPanelConfig,\n};\n\nexport * from './consts';\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","import {\n  IS_IOS,\n  IS_MOBILE,\n  runnerConfig\n} from 'Configs';\n\nconst { classes } = runnerConfig; \n\nexport function getRandomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Vibrate on mobile devices.\n * @param {number} duration Duration of the vibration in milliseconds.\n */\nexport function vibrate(duration) {\n  if (IS_MOBILE && window.navigator.vibrate) {\n    window.navigator.vibrate(duration);\n  }\n}\n\n/**\n * Create canvas element.\n * @param {HTMLElement} container Element to append canvas to.\n * @param {number} width\n * @param {number} height\n * @param {string} opt_classname\n * @return {HTMLCanvasElement}\n */\nexport function createCanvas(container, width, height, opt_classname) {\n  var canvas = document.createElement('canvas');\n  canvas.className = opt_classname ? classes.CANVAS + ' ' +\n    opt_classname : classes.CANVAS;\n  canvas.width = width;\n  canvas.height = height;\n  container.appendChild(canvas);\n\n  return canvas;\n}\n\n/**\n * Decodes the base 64 audio to ArrayBuffer used by Web Audio.\n * @param {string} base64String\n */\nexport function decodeBase64ToArrayBuffer(base64String) {\n  var len = (base64String.length / 4) * 3;\n  var str = atob(base64String);\n  var arrayBuffer = new ArrayBuffer(len);\n  var bytes = new Uint8Array(arrayBuffer);\n\n  for (var i = 0; i < len; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n/**\n * Return the current timestamp.\n * @return {number}\n */\nexport function getTimeStamp() {\n  return IS_IOS ? new Date().getTime() : performance.now();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service.js","export * from './collisionBox';\n\n\n// WEBPACK FOOTER //\n// ./src/collision/index.js","/**\n * Default game width.\n * @const\n */\nexport const DEFAULT_WIDTH = 600;\n\nexport const DEFAULT_HEIGHT = 150;\n\nexport const DIMENSIONS = {\n  WIDTH: DEFAULT_WIDTH,\n  HEIGHT: DEFAULT_HEIGHT\n}\n\n\n/**\n * Frames per second.\n * @const\n */\nexport const FPS = 60;\n\n/** @const */\nexport const IS_HIDPI = window.devicePixelRatio > 1 && false;\n\n/** @const */\nexport const IS_IOS = /iPad|iPhone|iPod/.test(window.navigator.platform);\n\n/** @const */\nexport const IS_MOBILE = /Android/.test(window.navigator.userAgent) || IS_IOS;\n\n/** @const */\nexport const IS_TOUCH_ENABLED = 'ontouchstart' in window;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/consts.js","import Runner from './runner';\n\n(function () {\n  window['Runner'] = Runner;\n\n})();\n\n\nfunction onDocumentLoad() {\n  new Runner('.interstitial-wrapper');  \n}\n\ndocument.addEventListener('DOMContentLoaded', onDocumentLoad);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Runner from './runner';\n\nexport default Runner;\n\n\n// WEBPACK FOOTER //\n// ./src/runner/index.js","import {\n  runnerConfig,\n  DEFAULT_WIDTH,\n  FPS,\n  IS_HIDPI,\n  IS_IOS,\n  IS_MOBILE,\n  IS_TOUCH_ENABLED,\n  DIMENSIONS,\n} from 'Configs';\nimport { \n  createCanvas,\n  getTimeStamp,\n  decodeBase64ToArrayBuffer\n} from '../service';\nimport Horizon from '../horizon';\nimport Trex from '../trex';\nimport DistanceMeter from '../distanceMeter';\nimport { checkForCollision } from '../collision';\nimport ImagesLoader from './imagesLoader';\n\nclass Runner {\n  constructor(outerContainerId, opt_config) {\n    console.log('construct');\n    this.outerContainerEl = document.querySelector(outerContainerId);\n    this.containerEl = null;\n    this.snackbarEl = null;\n    this.detailsButton = this.outerContainerEl.querySelector('#details-button');\n\n    this.config = opt_config || Runner.config;\n\n    this.dimensions = DIMENSIONS;\n\n    this.canvas = null;\n    this.canvasCtx = null;\n\n    this.tRex = null;\n\n    this.distanceMeter = null;\n    this.distanceRan = 0;\n\n    this.highestScore = 0;\n\n    this.time = 0;\n    this.runningTime = 0;\n    this.msPerFrame = 1000 / FPS;\n    this.currentSpeed = this.config.SPEED;\n\n    this.obstacles = [];\n\n    this.activated = false; // Whether the easter egg has been activated.\n    this.playing = false; // Whether the game is currently in play state.\n    this.crashed = false;\n    this.paused = false;\n    this.inverted = false;\n    this.invertTimer = 0;\n    this.resizeTimerId_ = null;\n\n    this.playCount = 0;\n\n    // Sound FX.\n    this.audioBuffer = null;\n    this.soundFx = {};\n\n    // Global web audio context for playing sounds.\n    this.audioContext = null;\n\n    // Images.\n    this.images = {};\n    this.imagesLoaded = 0;\n\n    if (this.isDisabled()) {\n      this.setupDisabledRunner();\n    } else {\n      this.loadImages();\n    }\n  }\n\n  isDisabled() {\n    // return loadTimeData && loadTimeData.valueExists('disabledEasterEgg');\n    return false;\n  }\n\n  /**\n   * For disabled instances, set up a snackbar with the disabled message.\n   */\n  setupDisabledRunner() {\n    this.containerEl = document.createElement('div');\n    this.containerEl.className = Runner.classes.SNACKBAR;\n    this.containerEl.textContent = loadTimeData.getValue('disabledEasterEgg');\n    this.outerContainerEl.appendChild(this.containerEl);\n\n    // Show notification when the activation key is pressed.\n    document.addEventListener(Runner.events.KEYDOWN, function(e) {\n      if (Runner.keycodes.JUMP[e.keyCode]) {\n        this.containerEl.classList.add(Runner.classes.SNACKBAR_SHOW);\n        document.querySelector('.icon').classList.add('icon-disabled');\n      }\n    }.bind(this));\n  }\n\n  /**\n   * Setting individual settings for debugging.\n   * @param {string} setting\n   * @param {*} value\n   */\n  updateConfigSetting(setting, value) {\n    if (setting in this.config && value != undefined) {\n      this.config[setting] = value;\n\n      switch (setting) {\n        case 'GRAVITY':\n        case 'MIN_JUMP_HEIGHT':\n        case 'SPEED_DROP_COEFFICIENT':\n          this.tRex.config[setting] = value;\n          break;\n        case 'INITIAL_JUMP_VELOCITY':\n          this.tRex.setJumpVelocity(value);\n          break;\n        case 'SPEED':\n          this.setSpeed(value);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Cache the appropriate image sprite from the page and get the sprite sheet\n   * definition.\n   */\n  loadImages() {\n    let imagesLoader, spriteIds;    \n\n    if (IS_HIDPI) {\n      spriteIds = Runner.spriteIds['HDPI'];\n      this.spriteDef = Runner.spriteDefinition.HDPI;\n\n    } else {\n      spriteIds = Runner.spriteIds['LDPI'];\n      this.spriteDef = Runner.spriteDefinition.LDPI;\n\n    }\n\n    imagesLoader = new ImagesLoader(spriteIds);\n\n    if (imagesLoader.checkAll()) {\n      this.init();\n    } else {\n      imagesLoader.onLoaded(this.init.bind(this));\n    }\n  }\n\n  /**\n   * Load and decode base 64 encoded sounds.\n   */\n  loadSounds() {\n    if (!IS_IOS) {\n      this.audioContext = new AudioContext();\n\n      var resourceTemplate =\n        document.getElementById(this.config.RESOURCE_TEMPLATE_ID).content;\n\n      for (var sound in Runner.sounds) {\n        var soundSrc =\n          resourceTemplate.getElementById(Runner.sounds[sound]).src;\n        soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1);\n        var buffer = decodeBase64ToArrayBuffer(soundSrc);\n\n        // Async, so no guarantee of order in array.\n        this.audioContext.decodeAudioData(buffer, function(index, audioData) {\n          this.soundFx[index] = audioData;\n        }.bind(this, sound));\n      }\n    }\n  }\n\n  /**\n   * Sets the game speed. Adjust the speed accordingly if on a smaller screen.\n   * @param {number} opt_speed\n   */\n  setSpeed(opt_speed) {\n    var speed = opt_speed || this.currentSpeed;\n\n    // Reduce the speed on smaller mobile screens.\n    if (this.dimensions.WIDTH < DEFAULT_WIDTH) {\n      var mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH *\n        this.config.MOBILE_SPEED_COEFFICIENT;\n      this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed;\n    } else if (opt_speed) {\n      this.currentSpeed = opt_speed;\n    }\n  }\n\n  /**\n   * Game initialiser.\n   */\n  init() {\n        console.log('init');\n\n    // Hide the static icon.\n    document.querySelector('.' + Runner.classes.ICON).style.visibility =\n      'hidden';\n\n    this.adjustDimensions();\n    this.setSpeed();\n\n    this.containerEl = document.createElement('div');\n    this.containerEl.className = Runner.classes.CONTAINER;\n\n    // Player canvas container.\n    console.log(this.dimensions);\n    this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH,\n      this.dimensions.HEIGHT, Runner.classes.PLAYER);\n\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.canvasCtx.fillStyle = '#f7f7f7';\n    this.canvasCtx.fill();\n    Runner.updateCanvasScaling(this.canvas);\n\n    // Horizon contains clouds, obstacles and the ground.\n    console.log(this.spriteDef, this.dimensions,\n      this.config.GAP_COEFFICIENT);\n    this.horizon = new Horizon(this.canvas);\n\n    // Distance meter\n    this.distanceMeter = new DistanceMeter(this.canvas,\n      this.spriteDef.TEXT_SPRITE, this.dimensions.WIDTH);\n\n    // Draw t-rex\n    this.tRex = new Trex(this.canvas);\n\n    this.outerContainerEl.appendChild(this.containerEl);\n\n    if (IS_MOBILE) {\n      this.createTouchController();\n    }\n\n    this.startListening();\n    this.update();\n\n    window.addEventListener(Runner.events.RESIZE,\n      this.debounceResize.bind(this));\n  }\n\n  /**\n   * Create the touch controller. A div that covers whole screen.\n   */\n  createTouchController() {\n    this.touchController = document.createElement('div');\n    this.touchController.className = Runner.classes.TOUCH_CONTROLLER;\n    this.outerContainerEl.appendChild(this.touchController);\n  }\n\n  /**\n   * Debounce the resize event.\n   */\n  debounceResize() {\n    if (!this.resizeTimerId_) {\n      this.resizeTimerId_ =\n        setInterval(this.adjustDimensions.bind(this), 250);\n    }\n  }\n\n  /**\n   * Adjust game space dimensions on resize.\n   */\n  adjustDimensions() {\n    clearInterval(this.resizeTimerId_);\n    this.resizeTimerId_ = null;\n\n    var boxStyles = window.getComputedStyle(this.outerContainerEl);\n    var padding = Number(boxStyles.paddingLeft.substr(0,\n      boxStyles.paddingLeft.length - 2));\n\n    this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2;\n\n    // Redraw the elements back onto the canvas.\n    if (this.canvas) {\n      this.canvas.width = this.dimensions.WIDTH;\n      this.canvas.height = this.dimensions.HEIGHT;\n\n      Runner.updateCanvasScaling(this.canvas);\n\n      this.distanceMeter.calcXPos(this.dimensions.WIDTH);\n      this.clearCanvas();\n      this.horizon.update(0, 0, true);\n      this.tRex.update(0);\n\n      // Outer container and distance meter.\n      if (this.playing || this.crashed || this.paused) {\n        this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n        this.containerEl.style.height = this.dimensions.HEIGHT + 'px';\n        this.distanceMeter.update(0, Math.ceil(this.distanceRan));\n        this.stop();\n      } else {\n        this.tRex.draw(0, 0);\n      }\n\n      // Game over panel.\n      if (this.crashed && this.gameOverPanel) {\n        this.gameOverPanel.updateDimensions(this.dimensions.WIDTH);\n        this.gameOverPanel.draw();\n      }\n    }\n  }\n\n  /**\n   * Play the game intro.\n   * Canvas container width expands out to the full width.\n   */\n  playIntro() {\n    if (!this.activated && !this.crashed) {\n      this.playingIntro = true;\n      this.tRex.playingIntro = true;\n\n      // CSS animation definition.\n      var keyframes = '@-webkit-keyframes intro { ' +\n        'from { width:' + Trex.config.WIDTH + 'px }' +\n        'to { width: ' + this.dimensions.WIDTH + 'px }' +\n        '}';\n      document.styleSheets[0].insertRule(keyframes, 0);\n\n      this.containerEl.addEventListener(Runner.events.ANIM_END,\n        this.startGame.bind(this));\n\n      this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both';\n      this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n\n      // if (this.touchController) {\n      //     this.outerContainerEl.appendChild(this.touchController);\n      // }\n      this.playing = true;\n      this.activated = true;\n    } else if (this.crashed) {\n      this.restart();\n    }\n  }\n\n\n  /**\n   * Update the game status to started.\n   */\n  startGame() {\n    this.runningTime = 0;\n    this.playingIntro = false;\n    this.tRex.playingIntro = false;\n    this.containerEl.style.webkitAnimation = '';\n    this.playCount++;\n\n    // Handle tabbing off the page. Pause the current game.\n    document.addEventListener(Runner.events.VISIBILITY,\n      this.onVisibilityChange.bind(this));\n\n    window.addEventListener(Runner.events.BLUR,\n      this.onVisibilityChange.bind(this));\n\n    window.addEventListener(Runner.events.FOCUS,\n      this.onVisibilityChange.bind(this));\n  }\n\n  clearCanvas() {\n    this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH,\n      this.dimensions.HEIGHT);\n  }\n\n  /**\n   * Update the game frame and schedules the next one.\n   */\n  update() {\n    this.updatePending = false;\n\n    var now = getTimeStamp();\n    var deltaTime = now - (this.time || now);\n    this.time = now;\n\n    if (this.playing) {\n      this.clearCanvas();\n\n      if (this.tRex.jumping) {\n        this.tRex.updateJump(deltaTime);\n      }\n\n      this.runningTime += deltaTime;\n      var hasObstacles = this.runningTime > this.config.CLEAR_TIME;\n\n      // First jump triggers the intro.\n      if (this.tRex.jumpCount == 1 && !this.playingIntro) {\n        this.playIntro();\n      }\n\n      // The horizon doesn't move until the intro is over.\n      if (this.playingIntro) {\n        this.horizon.update(0, this.currentSpeed, hasObstacles);\n      } else {\n        deltaTime = !this.activated ? 0 : deltaTime;\n        this.horizon.update(deltaTime, this.currentSpeed, hasObstacles,\n          this.inverted);\n      }\n\n      // Check for collisions.\n      var collision = hasObstacles &&\n        checkForCollision(this.horizon.obstacles[0], this.tRex);\n\n      if (!collision) {\n        this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame;\n\n        if (this.currentSpeed < this.config.MAX_SPEED) {\n          this.currentSpeed += this.config.ACCELERATION;\n        }\n      } else {\n        this.gameOver();\n      }\n\n      var playAchievementSound = this.distanceMeter.update(deltaTime,\n        Math.ceil(this.distanceRan));\n\n      if (playAchievementSound) {\n        this.playSound(this.soundFx.SCORE);\n      }\n\n      // Night mode.\n      if (this.invertTimer > this.config.INVERT_FADE_DURATION) {\n        this.invertTimer = 0;\n        this.invertTrigger = false;\n        this.invert();\n      } else if (this.invertTimer) {\n        this.invertTimer += deltaTime;\n      } else {\n        var actualDistance =\n          this.distanceMeter.getActualDistance(Math.ceil(this.distanceRan));\n\n        if (actualDistance > 0) {\n          this.invertTrigger = !(actualDistance %\n            this.config.INVERT_DISTANCE);\n\n          if (this.invertTrigger && this.invertTimer === 0) {\n            this.invertTimer += deltaTime;\n            this.invert();\n          }\n        }\n      }\n    }\n\n    if (this.playing || (!this.activated &&\n        this.tRex.blinkCount < Runner.config.MAX_BLINK_COUNT)) {\n      this.tRex.update(deltaTime);\n      this.scheduleNextUpdate();\n    }\n  }\n\n  /**\n   * Event handler.\n   */\n  handleEvent(e) {\n    return (function(evtType, events) {\n      switch (evtType) {\n        case events.KEYDOWN:\n        case events.TOUCHSTART:\n        case events.MOUSEDOWN:\n          this.onKeyDown(e);\n          break;\n        case events.KEYUP:\n        case events.TOUCHEND:\n        case events.MOUSEUP:\n          this.onKeyUp(e);\n          break;\n      }\n    }.bind(this))(e.type, Runner.events);\n  }\n\n  /**\n   * Bind relevant key / mouse / touch listeners.\n   */\n  startListening() {\n    // Keys.\n    console.log(this);\n    document.addEventListener(Runner.events.KEYDOWN, this);\n    document.addEventListener(Runner.events.KEYUP, this);\n\n    if (IS_MOBILE) {\n      // Mobile only touch devices.\n      this.touchController.addEventListener(Runner.events.TOUCHSTART, this);\n      this.touchController.addEventListener(Runner.events.TOUCHEND, this);\n      this.containerEl.addEventListener(Runner.events.TOUCHSTART, this);\n    } else {\n      // Mouse.\n      document.addEventListener(Runner.events.MOUSEDOWN, this);\n      document.addEventListener(Runner.events.MOUSEUP, this);\n    }\n  }\n\n  /**\n   * Remove all listeners.\n   */\n  stopListening() {\n    document.removeEventListener(Runner.events.KEYDOWN, this);\n    document.removeEventListener(Runner.events.KEYUP, this);\n\n    if (IS_MOBILE) {\n      this.touchController.removeEventListener(Runner.events.TOUCHSTART, this);\n      this.touchController.removeEventListener(Runner.events.TOUCHEND, this);\n      this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this);\n    } else {\n      document.removeEventListener(Runner.events.MOUSEDOWN, this);\n      document.removeEventListener(Runner.events.MOUSEUP, this);\n    }\n  }\n\n  /**\n   * Process keydown.\n   * @param {Event} e\n   */\n  onKeyDown(e) {\n    // Prevent native page scrolling whilst tapping on mobile.\n    if (IS_MOBILE && this.playing) {\n      e.preventDefault();\n    }\n\n    if (e.target != this.detailsButton) {\n      if (!this.crashed && (Runner.keycodes.JUMP[e.keyCode] ||\n          e.type == Runner.events.TOUCHSTART)) {\n        if (!this.playing) {\n          this.loadSounds();\n          this.playing = true;\n          this.update();\n          if (window.errorPageController) {\n            errorPageController.trackEasterEgg();\n          }\n        }\n        //  Play sound effect and jump on starting the game for the first time.\n        if (!this.tRex.jumping && !this.tRex.ducking) {\n          this.playSound(this.soundFx.BUTTON_PRESS);\n          this.tRex.startJump(this.currentSpeed);\n        }\n      }\n\n      if (this.crashed && e.type == Runner.events.TOUCHSTART &&\n        e.currentTarget == this.containerEl) {\n        this.restart();\n      }\n    }\n\n    if (this.playing && !this.crashed && Runner.keycodes.DUCK[e.keyCode]) {\n      e.preventDefault();\n      if (this.tRex.jumping) {\n        // Speed drop, activated only when jump key is not pressed.\n        this.tRex.setSpeedDrop();\n      } else if (!this.tRex.jumping && !this.tRex.ducking) {\n        // Duck.\n        this.tRex.setDuck(true);\n      }\n    }\n  }\n\n\n  /**\n   * Process key up.\n   * @param {Event} e\n   */\n  onKeyUp(e) {\n    var keyCode = String(e.keyCode);\n    var isjumpKey = Runner.keycodes.JUMP[keyCode] ||\n      e.type == Runner.events.TOUCHEND ||\n      e.type == Runner.events.MOUSEDOWN;\n\n    if (this.isRunning() && isjumpKey) {\n      this.tRex.endJump();\n    } else if (Runner.keycodes.DUCK[keyCode]) {\n      this.tRex.speedDrop = false;\n      this.tRex.setDuck(false);\n    } else if (this.crashed) {\n      // Check that enough time has elapsed before allowing jump key to restart.\n      var deltaTime = getTimeStamp() - this.time;\n\n      if (Runner.keycodes.RESTART[keyCode] || this.isLeftClickOnCanvas(e) ||\n        (deltaTime >= this.config.GAMEOVER_CLEAR_TIME &&\n          Runner.keycodes.JUMP[keyCode])) {\n        this.restart();\n      }\n    } else if (this.paused && isjumpKey) {\n      // Reset the jump state\n      this.tRex.reset();\n      this.play();\n    }\n  }\n\n  /**\n   * Returns whether the event was a left click on canvas.\n   * On Windows right click is registered as a click.\n   * @param {Event} e\n   * @return {boolean}\n   */\n  isLeftClickOnCanvas(e) {\n    return e.button != null && e.button < 2 &&\n      e.type == Runner.events.MOUSEUP && e.target == this.canvas;\n  }\n\n  /**\n   * RequestAnimationFrame wrapper.\n   */\n  scheduleNextUpdate() {\n    if (!this.updatePending) {\n      this.updatePending = true;\n      this.raqId = requestAnimationFrame(this.update.bind(this));\n    }\n  }\n\n  /**\n   * Whether the game is running.\n   * @return {boolean}\n   */\n  isRunning() {\n    return !!this.raqId;\n  }\n\n  /**\n   * Game over state.\n   */\n  gameOver() {\n    this.playSound(this.soundFx.HIT);\n    vibrate(200);\n\n    this.stop();\n    this.crashed = true;\n    this.distanceMeter.acheivement = false;\n\n    this.tRex.update(100, Trex.status.CRASHED);\n\n    // Game over panel.\n    if (!this.gameOverPanel) {\n      this.gameOverPanel = new GameOverPanel(this.canvas,\n        this.spriteDef.TEXT_SPRITE, this.spriteDef.RESTART,\n        this.dimensions);\n    } else {\n      this.gameOverPanel.draw();\n    }\n\n    // Update the high score.\n    if (this.distanceRan > this.highestScore) {\n      this.highestScore = Math.ceil(this.distanceRan);\n      this.distanceMeter.setHighScore(this.highestScore);\n    }\n\n    // Reset the time clock.\n    this.time = getTimeStamp();\n  }\n\n  stop() {\n    this.playing = false;\n    this.paused = true;\n    cancelAnimationFrame(this.raqId);\n    this.raqId = 0;\n  }\n\n  play() {\n    if (!this.crashed) {\n      this.playing = true;\n      this.paused = false;\n      this.tRex.update(0, Trex.status.RUNNING);\n      this.time = getTimeStamp();\n      this.update();\n    }\n  }\n\n  restart() {\n    if (!this.raqId) {\n      this.playCount++;\n      this.runningTime = 0;\n      this.playing = true;\n      this.crashed = false;\n      this.distanceRan = 0;\n      this.setSpeed(this.config.SPEED);\n      this.time = getTimeStamp();\n      this.containerEl.classList.remove(Runner.classes.CRASHED);\n      this.clearCanvas();\n      this.distanceMeter.reset(this.highestScore);\n      this.horizon.reset();\n      this.tRex.reset();\n      this.playSound(this.soundFx.BUTTON_PRESS);\n      this.invert(true);\n      this.update();\n    }\n  }\n\n  /**\n   * Pause the game if the tab is not in focus.\n   */\n  onVisibilityChange(e) {\n    if (document.hidden || document.webkitHidden || e.type == 'blur' ||\n      document.visibilityState != 'visible') {\n      this.stop();\n    } else if (!this.crashed) {\n      this.tRex.reset();\n      this.play();\n    }\n  }\n\n  /**\n   * Play a sound.\n   * @param {SoundBuffer} soundBuffer\n   */\n  playSound(soundBuffer) {\n    if (soundBuffer) {\n      var sourceNode = this.audioContext.createBufferSource();\n      sourceNode.buffer = soundBuffer;\n      sourceNode.connect(this.audioContext.destination);\n      sourceNode.start(0);\n    }\n  }\n\n  /**\n   * Inverts the current page / canvas colors.\n   * @param {boolean} Whether to reset colors.\n   */\n  invert(reset) {\n    if (reset) {\n      document.body.classList.toggle(Runner.classes.INVERTED, false);\n      this.invertTimer = 0;\n      this.inverted = false;\n    } else {\n      this.inverted = document.body.classList.toggle(Runner.classes.INVERTED,\n        this.invertTrigger);\n    }\n  }\n}\n\nRunner = Object.assign(Runner, runnerConfig);\n\nRunner.updateCanvasScaling = function(canvas, opt_width, opt_height) {\n  var context = canvas.getContext('2d');\n\n  // Query the various pixel ratios\n  var devicePixelRatio = Math.floor(window.devicePixelRatio) || 1;\n  var backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1;\n  var ratio = devicePixelRatio / backingStoreRatio;\n\n  // Upscale the canvas if the two ratios don't match\n  if (devicePixelRatio !== backingStoreRatio) {\n    var oldWidth = opt_width || canvas.width;\n    var oldHeight = opt_height || canvas.height;\n\n    canvas.width = oldWidth * ratio;\n    canvas.height = oldHeight * ratio;\n\n    canvas.style.width = oldWidth + 'px';\n    canvas.style.height = oldHeight + 'px';\n\n    // Scale the context to counter the fact that we've manually scaled\n    // our canvas element.\n    context.scale(ratio, ratio);\n    return true;\n  } else if (devicePixelRatio == 1) {\n    // Reset the canvas width / height. Fixes scaling bug when the page is\n    // zoomed and the devicePixelRatio changes accordingly.\n    canvas.style.width = canvas.width + 'px';\n    canvas.style.height = canvas.height + 'px';\n  }\n  return false;\n};\n\n\n\nexport default Runner;\n\n\n// WEBPACK FOOTER //\n// ./src/runner/runner.js","import {CollisionBox} from '../collision';\n\nexport const config = {\n  SOURCE_WIDTH: 375,\n  SOURCE_HEIGHT: 707,\n  SOURCE_WIDTH_DUCK: 362,\n  SOURCE_HEIGHT_DUCK: 507,  \n  DROP_VELOCITY: -5,\n  GRAVITY: 0.6,\n  HEIGHT: 47,\n  HEIGHT_DUCK: 25,\n  INIITAL_JUMP_VELOCITY: -10,\n  INTRO_DURATION: 1500,\n  MAX_JUMP_HEIGHT: 30,\n  MIN_JUMP_HEIGHT: 30,\n  SPEED_DROP_COEFFICIENT: 3,\n  SPRITE_WIDTH: 262,\n  START_X_POS: 50,\n  WIDTH: 44,\n  WIDTH_DUCK: 59\n};\n\nexport const collisionBoxes = {\n  DUCKING: [\n    new CollisionBox(1, 18, 55, 25)\n  ],\n  RUNNING: [\n    new CollisionBox(22, 0, 17, 16),\n    new CollisionBox(1, 18, 30, 9),\n    new CollisionBox(10, 35, 14, 8),\n    new CollisionBox(1, 24, 29, 5),\n    new CollisionBox(5, 30, 21, 4),\n    new CollisionBox(9, 34, 15, 4)\n  ]\n};\n\nexport const status = {\n  CRASHED: 'CRASHED',\n  DUCKING: 'DUCKING',\n  JUMPING: 'JUMPING',\n  RUNNING: 'RUNNING',\n  WAITING: 'WAITING'\n};\n\nexport const BLINK_TIMING = 7000;\n\nexport const animFrames = {\n  WAITING: {\n    frames: [375, 0],\n    msPerFrame: 1000 / 3\n  },\n  RUNNING: {\n    frames: [750, 1125],\n    msPerFrame: 1000 / 12\n  },\n  CRASHED: {\n    frames: [220],\n    msPerFrame: 1000 / 60\n  },\n  JUMPING: {\n    frames: [0],\n    msPerFrame: 1000 / 60\n  },\n  DUCKING: {\n    frames: [2250, 2612],\n    msPerFrame: 1000 / 8\n  }\n};\n\nexport const spriteIds = {\n  LDPI: {\n      TREX: 'trex-1x'\n  },\n  HDPI: {\n      TREX: 'trex-2x'\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/trex-config.js","import {\n  trexConfig,\n  runnerConfig,\n  DIMENSIONS,\n} from 'Configs';\n\nexport class CollisionBox {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n}\n\n/**\n * Check for a collision.\n * @param {!Obstacle} obstacle\n * @param {!Trex} tRex T-rex object.\n * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing\n *    collision boxes.\n * @return {Array<CollisionBox>}\n */\nexport function checkForCollision(obstacle, tRex, opt_canvasCtx) {\n  var obstacleBoxXPos = DIMENSIONS.WIDTH + obstacle.xPos;\n\n  // Adjustments are made to the bounding box as there is a 1 pixel white\n  // border around the t-rex and obstacles.\n  var tRexBox = new CollisionBox(\n    tRex.xPos + 1,\n    tRex.yPos + 1,\n    tRex.config.WIDTH - 2,\n    tRex.config.HEIGHT - 2);\n\n  var obstacleBox = new CollisionBox(\n    obstacle.xPos + 1,\n    obstacle.yPos + 1,\n    obstacle.typeConfig.width * obstacle.size - 2,\n    obstacle.typeConfig.height - 2);\n\n  // Debug outer box\n  if (opt_canvasCtx) {\n    drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox);\n  }\n\n  // Simple outer bounds check.\n  if (boxCompare(tRexBox, obstacleBox)) {\n    var collisionBoxes = obstacle.collisionBoxes;\n    var tRexCollisionBoxes = tRex.ducking ?\n      trexConfig.collisionBoxes.DUCKING : trexConfig.collisionBoxes.RUNNING;\n\n    // Detailed axis aligned box check.\n    for (var t = 0; t < tRexCollisionBoxes.length; t++) {\n      for (var i = 0; i < collisionBoxes.length; i++) {\n        // Adjust the box to actual positions.\n        var adjTrexBox =\n          createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox);\n        var adjObstacleBox =\n          createAdjustedCollisionBox(collisionBoxes[i], obstacleBox);\n        var crashed = boxCompare(adjTrexBox, adjObstacleBox);\n\n        // Draw boxes for debug.\n        if (opt_canvasCtx) {\n          drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox);\n        }\n\n        if (crashed) {\n          return [adjTrexBox, adjObstacleBox];\n        }\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Adjust the collision box.\n * @param {!CollisionBox} box The original box.\n * @param {!CollisionBox} adjustment Adjustment box.\n * @return {CollisionBox} The adjusted collision box object.\n */\nexport function createAdjustedCollisionBox(box, adjustment) {\n  return new CollisionBox(\n    box.x + adjustment.x,\n    box.y + adjustment.y,\n    box.width,\n    box.height);\n};\n\n\n/**\n * Draw the collision boxes for debug.\n */\nexport function drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) {\n  canvasCtx.save();\n  canvasCtx.strokeStyle = '#f00';\n  canvasCtx.strokeRect(tRexBox.x, tRexBox.y, tRexBox.width, tRexBox.height);\n\n  canvasCtx.strokeStyle = '#0f0';\n  canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y,\n    obstacleBox.width, obstacleBox.height);\n  canvasCtx.restore();\n};\n\n\n/**\n * Compare two collision boxes for a collision.\n * @param {CollisionBox} tRexBox\n * @param {CollisionBox} obstacleBox\n * @return {boolean} Whether the boxes intersected.\n */\nexport function boxCompare(tRexBox, obstacleBox) {\n  var crashed = false;\n  var tRexBoxX = tRexBox.x;\n  var tRexBoxY = tRexBox.y;\n\n  var obstacleBoxX = obstacleBox.x;\n  var obstacleBoxY = obstacleBox.y;\n\n  // Axis-Aligned Bounding Box method.\n  if (tRexBox.x < obstacleBoxX + obstacleBox.width &&\n    tRexBox.x + tRexBox.width > obstacleBoxX &&\n    tRexBox.y < obstacleBox.y + obstacleBox.height &&\n    tRexBox.height + tRexBox.y > obstacleBox.y) {\n    crashed = true;\n  }\n\n  return crashed;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/collision/collisionBox.js","export const config = {\n  HEIGHT: 14,\n  MAX_CLOUD_GAP: 400,\n  MAX_SKY_LEVEL: 30,\n  MIN_CLOUD_GAP: 100,\n  MIN_SKY_LEVEL: 71,\n  WIDTH: 46\n};\n\nexport const spriteIds = {\n  LDPI: {\n      CLOUD: 'cloud-1x'\n  },\n  HDPI: {\n      CLOUD: 'cloud-2x'\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/cloud-config.js","import {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from './consts';\n\nexport const config = {\n  ACCELERATION: 0.001,\n  BG_CLOUD_SPEED: 0.2,\n  BOTTOM_PAD: 10,\n  CLEAR_TIME: 3000,\n  CLOUD_FREQUENCY: 0.5,\n  GAMEOVER_CLEAR_TIME: 750,\n  GAP_COEFFICIENT: 0.6,\n  GRAVITY: 0.6,\n  INITIAL_JUMP_VELOCITY: 12,\n  INVERT_FADE_DURATION: 12000,\n  INVERT_DISTANCE: 700,\n  MAX_BLINK_COUNT: 3,\n  MAX_CLOUDS: 6,\n  MAX_OBSTACLE_LENGTH: 3,\n  MAX_OBSTACLE_DUPLICATION: 2,\n  MAX_SPEED: 13,\n  MIN_JUMP_HEIGHT: 35,\n  MOBILE_SPEED_COEFFICIENT: 1.2,\n  RESOURCE_TEMPLATE_ID: 'audio-resources',\n  SPEED: 6,\n  SPEED_DROP_COEFFICIENT: 3\n};\n\nexport const classes = {\n  CANVAS: 'runner-canvas',\n  CONTAINER: 'runner-container',\n  CRASHED: 'crashed',\n  ICON: 'icon-offline',\n  INVERTED: 'inverted',\n  SNACKBAR: 'snackbar',\n  SNACKBAR_SHOW: 'snackbar-show',\n  TOUCH_CONTROLLER: 'controller'\n};\n\nexport const events = {\n  ANIM_END: 'webkitAnimationEnd',\n  CLICK: 'click',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  RESIZE: 'resize',\n  TOUCHEND: 'touchend',\n  TOUCHSTART: 'touchstart',\n  VISIBILITY: 'visibilitychange',\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  LOAD: 'load'\n};\n\nexport const spriteDefinition = {\n  LDPI: {\n      CACTUS_LARGE: { x: 332, y: 2 },\n      CACTUS_SMALL: { x: 228, y: 2 },\n      CLOUD: { x: 86, y: 2 },\n      HORIZON: { x: 2, y: 54 },\n      MOON: { x: 484, y: 2 },\n      PTERODACTYL: { x: 134, y: 2 },\n      RESTART: { x: 2, y: 2 },\n      TEXT_SPRITE: { x: 655, y: 2 },\n      TREX: { x: 848, y: 2 },\n      STAR: { x: 645, y: 2 }\n  },\n  HDPI: {\n      CACTUS_LARGE: { x: 652, y: 2 },\n      CACTUS_SMALL: { x: 446, y: 2 },\n      CLOUD: { x: 166, y: 2 },\n      HORIZON: { x: 2, y: 104 },\n      MOON: { x: 954, y: 2 },\n      PTERODACTYL: { x: 260, y: 2 },\n      RESTART: { x: 2, y: 2 },\n      TEXT_SPRITE: { x: 1294, y: 2 },\n      TREX: { x: 1678, y: 2 },\n      STAR: { x: 1276, y: 2 }\n  }\n};\n\nexport const spriteIds = {\n  LDPI: {\n      HORIZON: 'horizonLine-1x',\n      CLOUD: 'cloud-1x',\n      MOON: 'moon-1x',\n      STAR: 'star-1x',\n      CACTUS_SMALL: 'cactusSmall-1x',\n      CACTUS_LARGE: 'cactusLarge-1x',\n      PTERODACTYL: 'pterodactyl-1x',\n      TREX: 'trex-1x'\n  },\n  HDPI: {\n      HORIZON: 'horizonLine-2x',\n      CLOUD: 'cloud-2x',\n      MOON: 'moon-2x',\n      STAR: 'star-2x',\n      CACTUS_SMALL: 'cactusSmall-2x',\n      CACTUS_LARGE: 'cactusLarge-2x',\n      PTERODACTYL: 'pterodactyl-2x',\n      TREX: 'trex-2x'\n  }\n};\n\nexport const sounds = {\n  BUTTON_PRESS: 'offline-sound-press',\n  HIT: 'offline-sound-hit',\n  SCORE: 'offline-sound-reached'\n};\n\nexport const keycodes = {\n  JUMP: { '38': 1, '32': 1 },  // Up, spacebar\n  DUCK: { '40': 1 },  // Down\n  RESTART: { '13': 1 }  // Enter\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/runner-config.js","export const config = {\n  BG_CLOUD_SPEED: 0.2,\n  BUMPY_THRESHOLD: .3,\n  CLOUD_FREQUENCY: .5,\n  HORIZON_HEIGHT: 16,\n  MAX_OBSTACLE_DUPLICATION: 2,\n  MAX_CLOUDS: 6\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/horizon-config.js","import { CollisionBox } from '../collision';\n\nexport const MAX_GAP_COEFFICIENT = 1.5;\n\nexport const MAX_OBSTACLE_LENGTH = 3;\n\nexport const types = [{\n  type: 'CACTUS_SMALL',\n  width: 17,\n  height: 35,\n  yPos: 105,\n  multipleSpeed: 4,\n  minGap: 120,\n  minSpeed: 0,\n  collisionBoxes: [\n    new CollisionBox(0, 7, 5, 27),\n    new CollisionBox(4, 0, 6, 34),\n    new CollisionBox(10, 4, 7, 14)\n  ]\n}, {\n  type: 'CACTUS_LARGE',\n  width: 25,\n  height: 50,\n  yPos: 90,\n  multipleSpeed: 7,\n  minGap: 120,\n  minSpeed: 0,\n  collisionBoxes: [\n    new CollisionBox(0, 12, 7, 38),\n    new CollisionBox(8, 0, 7, 49),\n    new CollisionBox(13, 10, 10, 38)\n  ]\n}, {\n  type: 'PTERODACTYL',\n  width: 46,\n  height: 40,\n  yPos: [100, 75, 50], // Variable height.\n  yPosMobile: [100, 50], // Variable height mobile.\n  multipleSpeed: 999,\n  minSpeed: 8.5,\n  minGap: 150,\n  collisionBoxes: [\n    new CollisionBox(15, 15, 16, 5),\n    new CollisionBox(18, 21, 24, 6),\n    new CollisionBox(2, 14, 4, 3),\n    new CollisionBox(6, 10, 4, 7),\n    new CollisionBox(10, 8, 6, 9)\n  ],\n  numFrames: 2,\n  frameRate: 1000 / 6,\n  speedOffset: .8\n}];\n\nexport const spriteIds = {\n  LDPI: {\n      CACTUS_SMALL: 'cactusSmall-1x',\n      CACTUS_LARGE: 'cactusLarge-1x',\n      PTERODACTYL: 'pterodactyl-1x',\n\n  },\n  HDPI: {\n      CACTUS_SMALL: 'cactusSmall-2x',\n      CACTUS_LARGE: 'cactusLarge-2x',\n      PTERODACTYL: 'pterodactyl-2x',\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/obstacle-config.js","export const config = {\n  FADE_SPEED: 0.035,\n  HEIGHT: 40,\n  MOON_SPEED: 0.25,\n  NUM_STARS: 2,\n  STAR_SIZE: 9,\n  STAR_SPEED: 0.3,\n  STAR_MAX_Y: 70,\n  WIDTH: 20\n};\n\nexport const spriteIds = {\n  LDPI: {\n      MOON: 'moon-1x',\n      STAR: 'star-1x'\n  },\n  HDPI: {\n      MOON: 'moon-2x',\n      STAR: 'star-2x'\n  }\n};\nexport const phases = [140, 120, 100, 60, 40, 20, 0];\n\n\n// WEBPACK FOOTER //\n// ./src/config/nightMode-config.js","export const dimensions = {\n  WIDTH: 600,\n  HEIGHT: 12,\n  YPOS: 127\n};\n\nexport const spriteIds = {\n  LDPI: {\n      HORIZON: 'horizonLine-1x',\n  },\n  HDPI: {\n      HORIZON: 'horizonLine-2x',\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/horizonLine-config.js","export const dimensions = {\n  WIDTH: 10,\n  HEIGHT: 13,\n  DEST_WIDTH: 11\n};\n\n\n/**\n * Y positioning of the digits in the sprite sheet.\n * X position is always 0.\n * @type {Array<number>}\n */\nexport const yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120];\n\n\n/**\n * Distance meter config.\n * @enum {number}\n */\nexport const config = {\n  // Number of digits.\n  MAX_DISTANCE_UNITS: 5,\n\n  // Distance that causes achievement animation.\n  ACHIEVEMENT_DISTANCE: 100,\n\n  // Used for conversion from pixel distance to a scaled unit.\n  COEFFICIENT: 0.025,\n\n  // Flash duration in milliseconds.\n  FLASH_DURATION: 1000 / 4,\n\n  // Flash iterations for achievement animation.\n  FLASH_ITERATIONS: 3\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/distanceMeter-config.js","export const dimensions = {\n  TEXT_X: 0,\n  TEXT_Y: 13,\n  TEXT_WIDTH: 191,\n  TEXT_HEIGHT: 11,\n  RESTART_WIDTH: 36,\n  RESTART_HEIGHT: 32\n};\n\n\n// WEBPACK FOOTER //\n// ./src/config/gameOverPanel-config.js","import Horizon from './horizon';\n\nexport default Horizon;\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/index.js","import { \n  horizonConfig,\n  DIMENSIONS,\n} from 'Configs';\nimport HorizonLine from './horizonLine';\nimport NightMode from '../nightMode';\nimport Cloud from '../cloud';\nimport Obstacle from '../obstacle';\nimport { getRandomNum } from '../service';\n\nclass Horizon {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.config = Horizon.config;\n    this.obstacles = [];\n    this.obstacleHistory = [];\n    this.dimensions = DIMENSIONS;\n    this.horizonOffsets = [0, 0];\n    this.cloudFrequency = this.config.CLOUD_FREQUENCY;\n    this.nightMode = null;\n\n    // Cloud\n    this.clouds = [];\n    this.cloudSpeed = this.config.BG_CLOUD_SPEED;\n\n    // Horizon\n    this.horizonLine = null;\n    this.init();\n  }\n\n  init() {\n    this.addCloud();\n    this.horizonLine = new HorizonLine(this.canvas);\n    this.nightMode = new NightMode(this.canvas);\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   * @param {boolean} updateObstacles Used as an override to prevent\n   *     the obstacles from being updated / added. This happens in the\n   *     ease in section.\n   * @param {boolean} showNightMode Night mode activated.\n   */\n  update(deltaTime, currentSpeed, updateObstacles, showNightMode) {\n    this.runningTime += deltaTime;\n    this.horizonLine.update(deltaTime, currentSpeed);\n    this.nightMode.update(showNightMode);\n    this.updateClouds(deltaTime, currentSpeed);\n\n    if (updateObstacles) {\n      this.updateObstacles(deltaTime, currentSpeed);\n    }\n  }\n\n  /**\n   * Update the cloud positions.\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   */\n  updateClouds(deltaTime, speed) {\n    var cloudSpeed = this.cloudSpeed / 1000 * deltaTime * speed;\n    var numClouds = this.clouds.length;\n\n    if (numClouds) {\n      for (var i = numClouds - 1; i >= 0; i--) {\n        this.clouds[i].update(cloudSpeed);\n      }\n\n      var lastCloud = this.clouds[numClouds - 1];\n\n      // Check for adding a new cloud.\n      if (numClouds < this.config.MAX_CLOUDS &&\n        (this.dimensions.WIDTH - lastCloud.xPos) > lastCloud.cloudGap &&\n        this.cloudFrequency > Math.random()) {\n        this.addCloud();\n      }\n\n      // Remove expired clouds.\n      this.clouds = this.clouds.filter(function(obj) {\n        return !obj.remove;\n      });\n    } else {\n      this.addCloud();\n    }\n  }\n\n  /**\n   * Update the obstacle positions.\n   * @param {number} deltaTime\n   * @param {number} currentSpeed\n   */\n  updateObstacles(deltaTime, currentSpeed) {\n    // Obstacles, move to Horizon layer.\n    var updatedObstacles = this.obstacles.slice(0);\n\n    for (var i = 0; i < this.obstacles.length; i++) {\n      var obstacle = this.obstacles[i];\n      obstacle.update(deltaTime, currentSpeed);\n\n      // Clean up existing obstacles.\n      if (obstacle.remove) {\n        updatedObstacles.shift();\n      }\n    }\n    this.obstacles = updatedObstacles;\n\n    if (this.obstacles.length > 0) {\n      var lastObstacle = this.obstacles[this.obstacles.length - 1];\n\n      if (lastObstacle && !lastObstacle.followingObstacleCreated &&\n        lastObstacle.isVisible() &&\n        (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) <\n        this.dimensions.WIDTH) {\n        this.addNewObstacle(currentSpeed);\n        lastObstacle.followingObstacleCreated = true;\n      }\n    } else {\n      // Create new obstacles.\n      this.addNewObstacle(currentSpeed);\n    }\n  }\n\n  removeFirstObstacle() {\n    this.obstacles.shift();\n  }\n\n  /**\n   * Add a new obstacle.\n   * @param {number} currentSpeed\n   */\n  addNewObstacle(currentSpeed) {\n    var obstacleTypeIndex = getRandomNum(0, Obstacle.types.length - 1);\n    var obstacleType = Obstacle.types[obstacleTypeIndex];\n\n    // Check for multiples of the same type of obstacle.\n    // Also check obstacle is available at current speed.\n    if (this.duplicateObstacleCheck(obstacleType.type) ||\n      currentSpeed < obstacleType.minSpeed) {\n      this.addNewObstacle(currentSpeed);\n    } else {\n      this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType,\n        currentSpeed));\n\n      this.obstacleHistory.unshift(obstacleType.type);\n\n      if (this.obstacleHistory.length > 1) {\n        this.obstacleHistory.splice(Horizon.config.MAX_OBSTACLE_DUPLICATION);\n      }\n    }\n  }\n\n  /**\n   * Returns whether the previous two obstacles are the same as the next one.\n   * Maximum duplication is set in config value MAX_OBSTACLE_DUPLICATION.\n   * @return {boolean}\n   */\n  duplicateObstacleCheck(nextObstacleType) {\n    var duplicateCount = 0;\n\n    for (var i = 0; i < this.obstacleHistory.length; i++) {\n      duplicateCount = this.obstacleHistory[i] == nextObstacleType ?\n        duplicateCount + 1 : 0;\n    }\n    return duplicateCount >= Horizon.config.MAX_OBSTACLE_DUPLICATION;\n  }\n\n  /**\n   * Reset the horizon layer.\n   * Remove existing obstacles and reposition the horizon line.\n   */\n  reset() {\n    this.obstacles = [];\n    this.horizonLine.reset();\n    this.nightMode.reset();\n  }\n\n  /**\n   * Update the canvas width and scaling.\n   * @param {number} width Canvas width.\n   * @param {number} height Canvas height.\n   */\n  resize(width, height) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  /**\n   * Add a new cloud to the horizon.\n   */\n  addCloud() {\n    this.clouds.push(new Cloud(this.canvas));\n  }\n\n}\n\nHorizon = Object.assign(Horizon, horizonConfig);\n\nexport default Horizon;\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/horizon.js","import {\n  FPS,\n  IS_HIDPI,\n  horizonLineConfig\n} from 'Configs';\n\nclass HorizonLine {\n  constructor(canvas) {\n    this.spritePos = {x: 0, y: 0};\n    this.sprite = null;\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.sourceDimensions = {};\n    this.dimensions = HorizonLine.dimensions;\n    this.sourceXPos = [this.spritePos.x, this.spritePos.x +\n        this.dimensions.WIDTH];\n    this.xPos = [];\n    this.yPos = 0;\n    this.bumpThreshold = 0.5;\n\n    this.setSourceDimensions();\n    this.setSprite();\n    this.draw();\n  }\n\n  /**\n   * Set the source dimensions of the horizon line.\n   */\n  setSourceDimensions() {\n\n    for (var dimension in HorizonLine.dimensions) {\n      if (IS_HIDPI) {\n        if (dimension != 'YPOS') {\n          this.sourceDimensions[dimension] =\n            HorizonLine.dimensions[dimension] * 2;\n            console.log(this.sourceDimensions);\n        }\n      } else {\n        this.sourceDimensions[dimension] =\n          HorizonLine.dimensions[dimension];\n      }\n      this.dimensions[dimension] = HorizonLine.dimensions[dimension];\n    }\n\n    this.xPos = [0, HorizonLine.dimensions.WIDTH];\n    this.yPos = HorizonLine.dimensions.YPOS;\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(HorizonLine.spriteIds.HDPI.HORIZON);\n    } else {\n      this.sprite = document.getElementById(HorizonLine.spriteIds.LDPI.HORIZON)\n    }\n  }\n\n  /**\n   * Return the crop x position of a type.\n   */\n  getRandomType() {\n    return Math.random() > this.bumpThreshold ? this.dimensions.WIDTH : 0;\n  }\n\n  /**\n   * Draw the horizon line.\n   */\n  draw() {\n    this.canvasCtx.drawImage(this.sprite, this.sourceXPos[0],\n      this.spritePos.y,\n      this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n      this.xPos[0], this.yPos,\n      this.dimensions.WIDTH, this.dimensions.HEIGHT);\n\n    this.canvasCtx.drawImage(this.sprite, this.sourceXPos[1],\n      this.spritePos.y,\n      this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n      this.xPos[1], this.yPos,\n      this.dimensions.WIDTH, this.dimensions.HEIGHT);\n  }\n\n  /**\n   * Update the x position of an indivdual piece of the line.\n   * @param {number} pos Line position.\n   * @param {number} increment\n   */\n  updateXPos(pos, increment) {\n    var line1 = pos;\n    var line2 = pos == 0 ? 1 : 0;\n\n    this.xPos[line1] -= increment;\n    this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH;\n\n    if (this.xPos[line1] <= -this.dimensions.WIDTH) {\n      this.xPos[line1] += this.dimensions.WIDTH * 2;\n      this.xPos[line2] = this.xPos[line1] - this.dimensions.WIDTH;\n      this.sourceXPos[line1] = this.getRandomType() + this.spritePos.x;\n    }\n  }\n\n  /**\n   * Update the horizon line.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  update(deltaTime, speed) {\n    var increment = Math.floor(speed * (FPS / 1000) * deltaTime);\n\n    if (this.xPos[0] <= 0) {\n      this.updateXPos(0, increment);\n    } else {\n      this.updateXPos(1, increment);\n    }\n    this.draw();\n  }\n\n  /**\n   * Reset horizon to the starting position.\n   */\n  reset() {\n    this.xPos[0] = 0;\n    this.xPos[1] = HorizonLine.dimensions.WIDTH;\n  }\n}\n\nHorizonLine = Object.assign(HorizonLine, horizonLineConfig);\n\nexport default HorizonLine;\n\n\n// WEBPACK FOOTER //\n// ./src/horizon/horizonLine.js","import NightMode from './nightMode';\n\nexport default NightMode;\n\n\n// WEBPACK FOOTER //\n// ./src/nightMode/index.js","import { \n  nightModeConfig,\n  IS_HIDPI,\n  DIMENSIONS,\n} from 'Configs';\nimport { getRandomNum } from '../service';\n\nclass NightMode {\n  constructor(canvas) {\n    this.moonSpritePos = {x:0, y:0};\n    this.starSpritePos = {x:0, y:0};\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.xPos = DIMENSIONS.WIDTH - 50;\n    this.yPos = 30;\n    this.currentPhase = 0;\n    this.opacity = 0;\n    this.containerWidth = DIMENSIONS.WIDTH;\n    this.stars = [];\n    this.drawStars = false;\n    this.setSprite();\n    this.placeStars();\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.moonSprite = document.getElementById(NightMode.spriteIds.HDPI.MOON);\n      this.starSprite = document.getElementById(NightMode.spriteIds.HDPI.STAR)\n    } else {\n      this.moonSprite = document.getElementById(NightMode.spriteIds.LDPI.MOON);\n      this.starSprite = document.getElementById(NightMode.spriteIds.LDPI.STAR)\n    }\n  }\n\n  update(activated, delta) {\n    // Moon phase.\n    if (activated && this.opacity == 0) {\n      this.currentPhase++;\n\n      if (this.currentPhase >= NightMode.phases.length) {\n        this.currentPhase = 0;\n      }\n    }\n\n    // Fade in / out.\n    if (activated && (this.opacity < 1 || this.opacity == 0)) {\n      this.opacity += NightMode.config.FADE_SPEED;\n    } else if (this.opacity > 0) {\n      this.opacity -= NightMode.config.FADE_SPEED;\n    }\n\n    // Set moon positioning.\n    if (this.opacity > 0) {\n      this.xPos = this.updateXPos(this.xPos, NightMode.config.MOON_SPEED);\n\n      // Update stars.\n      if (this.drawStars) {\n        for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n          this.stars[i].x = this.updateXPos(this.stars[i].x,\n            NightMode.config.STAR_SPEED);\n        }\n      }\n      this.draw();\n    } else {\n      this.opacity = 0;\n      this.placeStars();\n    }\n    this.drawStars = true;\n  }\n\n  updateXPos(currentPos, speed) {\n    if (currentPos < -NightMode.config.WIDTH) {\n      currentPos = this.containerWidth;\n    } else {\n      currentPos -= speed;\n    }\n    return currentPos;\n  }\n\n  draw() {\n    var moonSourceWidth = this.currentPhase == 3 ? NightMode.config.WIDTH * 2 :\n        NightMode.config.WIDTH;\n    var moonSourceHeight = NightMode.config.HEIGHT;\n    var moonSourceX = this.moonSpritePos.x + NightMode.phases[this.currentPhase];\n    var moonOutputWidth = moonSourceWidth;\n    var starSize = NightMode.config.STAR_SIZE;\n    var starSourceX = this.starSpritePos.x;\n\n    if (IS_HIDPI) {\n        moonSourceWidth *= 2;\n        moonSourceHeight *= 2;\n        moonSourceX = this.moonSpritePos.x +\n            (NightMode.phases[this.currentPhase] * 2);\n        starSize *= 2;\n        starSourceX = this.starSpritePos.x;\n    }\n\n    this.canvasCtx.save();\n    this.canvasCtx.globalAlpha = this.opacity;\n\n    // Stars.\n    if (this.drawStars) {\n        for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n            this.canvasCtx.drawImage(this.starSprite,\n                starSourceX, this.stars[i].sourceY, starSize, starSize,\n                Math.round(this.stars[i].x), this.stars[i].y,\n                NightMode.config.STAR_SIZE, NightMode.config.STAR_SIZE);\n        }\n    }\n\n    // Moon.\n    console.log(IS_HIDPI, moonSourceWidth, moonSourceHeight, moonOutputWidth, NightMode.config.HEIGHT);\n    this.canvasCtx.drawImage(this.moonSprite, moonSourceX,\n        this.moonSpritePos.y, moonSourceWidth, moonSourceHeight,\n        Math.round(this.xPos), this.yPos,\n        moonOutputWidth, NightMode.config.HEIGHT);\n\n    this.canvasCtx.globalAlpha = 1;\n    this.canvasCtx.restore();\n  }\n\n  // Do star placement.\n  placeStars() {\n    var segmentSize = Math.round(this.containerWidth /\n      NightMode.config.NUM_STARS);\n\n    for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n      this.stars[i] = {};\n      this.stars[i].x = getRandomNum(segmentSize * i, segmentSize * (i + 1));\n      this.stars[i].y = getRandomNum(0, NightMode.config.STAR_MAX_Y);\n\n      if (IS_HIDPI) {\n        this.stars[i].sourceY = this.starSpritePos.y +\n          NightMode.config.STAR_SIZE * 2 * i;\n      } else {\n        this.stars[i].sourceY = this.starSpritePos.y +\n          NightMode.config.STAR_SIZE * i;\n      }\n    }\n  }\n\n  reset() {\n    this.currentPhase = 0;\n    this.opacity = 0;\n    this.update(false);\n  }\n\n}\n\nNightMode = Object.assign(NightMode, nightModeConfig);\n\nexport default NightMode;\n\n\n// WEBPACK FOOTER //\n// ./src/nightMode/nightMode.js","import Cloud from './cloud';\n\nexport default Cloud;\n\n\n// WEBPACK FOOTER //\n// ./src/cloud/index.js","import {\n  cloudConfig,\n  IS_HIDPI,\n  DIMENSIONS,\n} from 'Configs';\nimport { getRandomNum } from '../service';\n\nclass Cloud {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = this.canvas.getContext('2d');\n    this.spritePos = {x:0, y:0};\n    this.containerWidth = DIMENSIONS.WIDTH;\n    this.xPos = DIMENSIONS.WIDTH;\n    this.yPos = 0;\n    this.remove = false;\n    this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP,\n      Cloud.config.MAX_CLOUD_GAP);\n\n    this.setSprite();\n    this.init();\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(Cloud.spriteIds.HDPI.CLOUD);\n      console.log(this.sprite);\n    } else {\n      this.sprite = document.getElementById(Cloud.spriteIds.LDPI.CLOUD)\n    }\n  }\n  init() {\n    this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL,\n      Cloud.config.MIN_SKY_LEVEL);\n    this.draw();\n  }\n\n  /**\n   * Draw the cloud.\n   */\n  draw() {\n    this.canvasCtx.save();\n    var sourceWidth = Cloud.config.WIDTH;\n    var sourceHeight = Cloud.config.HEIGHT;\n\n    if (IS_HIDPI) {\n      sourceWidth = sourceWidth * 2;\n      sourceHeight = sourceHeight * 2;\n    }\n\n    this.canvasCtx.drawImage(this.sprite, this.spritePos.x,\n      this.spritePos.y,\n      sourceWidth, sourceHeight,\n      this.xPos, this.yPos,\n      Cloud.config.WIDTH, Cloud.config.HEIGHT);\n\n    this.canvasCtx.restore();\n  }\n\n  /**\n   * Update the cloud position.\n   * @param {number} speed\n   */\n  update(speed) {\n    if (!this.remove) {\n      this.xPos -= Math.ceil(speed);\n      this.draw();\n\n      // Mark as removeable if no longer in the canvas.\n      if (!this.isVisible()) {\n        this.remove = true;\n      }\n    }\n  }\n\n  /**\n   * Check if the cloud is visible on the stage.\n   * @return {boolean}\n   */\n  isVisible() {\n    return this.xPos + Cloud.config.WIDTH > 0;\n  }\n\n}\n\nCloud = Object.assign(Cloud, cloudConfig);\n\nexport default Cloud;\n\n\n// WEBPACK FOOTER //\n// ./src/cloud/cloud.js","import Obstacle from './obstacle';\n\nexport default Obstacle;\n\n\n// WEBPACK FOOTER //\n// ./src/obstacle/index.js","import {\n  obstacleConfig,\n  runnerConfig,\n  IS_MOBILE,\n  IS_HIDPI,\n  FPS,\n  DIMENSIONS,\n} from 'Configs';\nimport { CollisionBox } from '../collision';\nimport { getRandomNum } from '../service';\n\nclass Obstacle {\n  constructor(canvasCtx, type, speed) {\n    this.canvasCtx = canvasCtx;\n    this.spritePos = {x:0, y:0};\n    this.typeConfig = type;\n    this.gapCoefficient = runnerConfig.GAP_COEFFICIENT;\n    this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH);\n    this.dimensions = DIMENSIONS;\n    this.remove = false;\n    this.xPos = DIMENSIONS.WIDTH + (type.width || 0);\n    this.yPos = 0;\n    this.width = 0;\n    this.collisionBoxes = [];\n    this.gap = 0;\n    this.speedOffset = 0;\n\n    // For animated obstacles.\n    this.currentFrame = 0;\n    this.timer = 0;\n    this.setSprite(type);\n    this.init(speed);\n  }\n\n  setSprite({type}) {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(Obstacle.spriteIds.HDPI[type]);\n    } else {\n      this.sprite = document.getElementById(Obstacle.spriteIds.LDPI[type])\n    }  \n  }\n\n  init(speed) {\n    this.cloneCollisionBoxes();\n\n    // Only allow sizing if we're at the right speed.\n    if (this.size > 1 && this.typeConfig.multipleSpeed > speed) {\n      this.size = 1;\n    }\n\n    this.width = this.typeConfig.width * this.size;\n\n    // Check if obstacle can be positioned at various heights.\n    if (Array.isArray(this.typeConfig.yPos)) {\n      var yPosConfig = IS_MOBILE ? this.typeConfig.yPosMobile :\n        this.typeConfig.yPos;\n      this.yPos = yPosConfig[getRandomNum(0, yPosConfig.length - 1)];\n    } else {\n      this.yPos = this.typeConfig.yPos;\n    }\n\n    this.draw();\n\n    // Make collision box adjustments,\n    // Central box is adjusted to the size as one box.\n    //      ____        ______        ________\n    //    _|   |-|    _|     |-|    _|       |-|\n    //   | |<->| |   | |<--->| |   | |<----->| |\n    //   | | 1 | |   | |  2  | |   | |   3   | |\n    //   |_|___|_|   |_|_____|_|   |_|_______|_|\n    //\n    if (this.size > 1) {\n      this.collisionBoxes[1].width = this.width - this.collisionBoxes[0].width -\n        this.collisionBoxes[2].width;\n      this.collisionBoxes[2].x = this.width - this.collisionBoxes[2].width;\n    }\n\n    // For obstacles that go at a different speed from the horizon.\n    if (this.typeConfig.speedOffset) {\n      this.speedOffset = Math.random() > 0.5 ? this.typeConfig.speedOffset :\n        -this.typeConfig.speedOffset;\n    }\n\n    this.gap = this.getGap(this.gapCoefficient, speed);\n  }\n\n  /**\n   * Draw and crop based on size.\n   */\n  draw() {\n    var sourceWidth = this.typeConfig.width;\n    var sourceHeight = this.typeConfig.height;\n\n    if (IS_HIDPI) {\n      sourceWidth = sourceWidth * 2;\n      sourceHeight = sourceHeight * 2;\n    }\n\n    // X position in sprite.\n    var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1)) +\n      this.spritePos.x;\n\n    // Animation frames.\n    if (this.currentFrame > 0) {\n      sourceX += sourceWidth * this.currentFrame;\n    }\n\n    this.canvasCtx.drawImage(this.sprite,\n      sourceX, this.spritePos.y,\n      sourceWidth * this.size, sourceHeight,\n      this.xPos, this.yPos,\n      this.typeConfig.width * this.size, this.typeConfig.height);\n  }\n\n  /**\n   * Obstacle frame update.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  update(deltaTime, speed) {\n    if (!this.remove) {\n      if (this.typeConfig.speedOffset) {\n        speed += this.speedOffset;\n      }\n      this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime);\n\n      // Update frame\n      if (this.typeConfig.numFrames) {\n        this.timer += deltaTime;\n        if (this.timer >= this.typeConfig.frameRate) {\n          this.currentFrame =\n            this.currentFrame == this.typeConfig.numFrames - 1 ?\n            0 : this.currentFrame + 1;\n          this.timer = 0;\n        }\n      }\n      this.draw();\n\n      if (!this.isVisible()) {\n        this.remove = true;\n      }\n    }\n  }\n\n  /**\n   * Calculate a random gap size.\n   * - Minimum gap gets wider as speed increses\n   * @param {number} gapCoefficient\n   * @param {number} speed\n   * @return {number} The gap size.\n   */\n  getGap(gapCoefficient, speed) {\n    var minGap = Math.round(this.width * speed +\n      this.typeConfig.minGap * gapCoefficient);\n    var maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT);\n    return getRandomNum(minGap, maxGap);\n  }\n\n  /**\n   * Check if obstacle is visible.\n   * @return {boolean} Whether the obstacle is in the game area.\n   */\n  isVisible() {\n    return this.xPos + this.width > 0;\n  }\n\n  /**\n   * Make a copy of the collision boxes, since these will change based on\n   * obstacle type and size.\n   */\n  cloneCollisionBoxes() {\n    var collisionBoxes = this.typeConfig.collisionBoxes;\n\n    for (var i = collisionBoxes.length - 1; i >= 0; i--) {\n      this.collisionBoxes[i] = new CollisionBox(collisionBoxes[i].x,\n        collisionBoxes[i].y, collisionBoxes[i].width,\n        collisionBoxes[i].height);\n    }\n  }\n}\n\nObstacle = Object.assign(Obstacle, obstacleConfig);\n\nexport default Obstacle;\n\n\n// WEBPACK FOOTER //\n// ./src/obstacle/obstacle.js","import Trex from './trex';\n\nexport default Trex;\n\n\n// WEBPACK FOOTER //\n// ./src/trex/index.js","import { \n  trexConfig,\n  runnerConfig,\n  DIMENSIONS,\n  FPS,\n  IS_HIDPI\n} from 'Configs';\nimport { getTimeStamp } from '../service';\n\nclass Trex {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.spritePos = {x:0, y:0};\n    this.xPos = 0;\n    this.yPos = 0;\n    // Position when on the ground.\n    this.groundYPos = 0;\n    this.currentFrame = 0;\n    this.currentAnimFrames = [];\n    this.blinkDelay = 0;\n    this.blinkCount = 0;\n    this.animStartTime = 0;\n    this.timer = 0;\n    this.msPerFrame = 1000 / FPS;\n    this.config = Trex.config;\n    // Current status.\n    this.status = Trex.status.WAITING;\n\n    this.jumping = false;\n    this.ducking = false;\n    this.jumpVelocity = 0;\n    this.reachedMinHeight = false;\n    this.speedDrop = false;\n    this.jumpCount = 0;\n    this.jumpspotX = 0;\n\n    this.setSprite();\n    this.init();\n  }\n\n  setSprite() {\n    if (IS_HIDPI) {\n      this.sprite = document.getElementById(Trex.spriteIds.HDPI.TREX);\n    } else {\n      this.sprite = document.getElementById(Trex.spriteIds.LDPI.TREX)\n    }\n  }\n\n  init() {\n    this.groundYPos = DIMENSIONS.HEIGHT - this.config.HEIGHT -\n      runnerConfig.config.BOTTOM_PAD;\n    this.yPos = this.groundYPos;\n    this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT;\n\n    this.draw(0, 0);\n    this.update(0, Trex.status.WAITING);\n  }\n\n  /**\n   * Setter for the jump velocity.\n   * The approriate drop velocity is also set.\n   */\n  setJumpVelocity(setting) {\n    this.config.INIITAL_JUMP_VELOCITY = -setting;\n    this.config.DROP_VELOCITY = -setting / 2;\n  }\n\n  /**\n   * Set the animation status.\n   * @param {!number} deltaTime\n   * @param {Trex.status} status Optional status to switch to.\n   */\n  update(deltaTime, opt_status) {\n    this.timer += deltaTime;\n\n    // Update the status.\n    if (opt_status) {\n      this.status = opt_status;\n      this.currentFrame = 0;\n      this.msPerFrame = Trex.animFrames[opt_status].msPerFrame;\n      this.currentAnimFrames = Trex.animFrames[opt_status].frames;\n\n      if (opt_status == Trex.status.WAITING) {\n        this.animStartTime = getTimeStamp();\n        this.setBlinkDelay();\n      }\n    }\n\n    // Game intro animation, T-rex moves in from the left.\n    if (this.playingIntro && this.xPos < this.config.START_X_POS) {\n      this.xPos += Math.round((this.config.START_X_POS /\n        this.config.INTRO_DURATION) * deltaTime);\n    }\n\n    if (this.status == Trex.status.WAITING) {\n      this.blink(getTimeStamp());\n    } else {\n      this.draw(this.currentAnimFrames[this.currentFrame], 0);\n    }\n\n    // Update the frame position.\n    if (this.timer >= this.msPerFrame) {\n      this.currentFrame = this.currentFrame ==\n        this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\n      this.timer = 0;\n    }\n\n    // Speed drop becomes duck if the down key is still being pressed.\n    if (this.speedDrop && this.yPos == this.groundYPos) {\n      this.speedDrop = false;\n      this.setDuck(true);\n    }\n  }\n\n  /**\n   * Draw the t-rex to a particular position.\n   * @param {number} x\n   * @param {number} y\n   */\n  draw(x, y) {\n    var sourceX = x;\n    var sourceY = y;\n    // var sourceWidth = this.ducking && this.status != Trex.status.CRASHED ?\n    //   this.config.WIDTH_DUCK : this.config.WIDTH;\n    // var sourceHeight = this.config.HEIGHT;\n\n    var sourceWidth = this.ducking && this.status != Trex.status.CRASHED ?\n      this.config.SOURCE_WIDTH_DUCK : this.config.SOURCE_WIDTH;\n    var sourceHeight = this.config.SOURCE_HEIGHT;\n\n    if (IS_HIDPI) {\n      sourceX *= 2;\n      sourceY *= 2;\n      sourceWidth *= 2;\n      sourceHeight *= 2;\n    }\n\n    // Adjustments for sprite sheet position.\n    sourceX += this.spritePos.x;\n    sourceY += this.spritePos.y;\n\n    // Ducking.\n    if (this.ducking && this.status != Trex.status.CRASHED) {\n      this.canvasCtx.drawImage(this.sprite, sourceX, sourceY,\n        sourceWidth, sourceHeight,\n        this.xPos, this.yPos,\n        this.config.WIDTH_DUCK, this.config.HEIGHT);\n    } else {\n      // Crashed whilst ducking. Trex is standing up so needs adjustment.\n      if (this.ducking && this.status == Trex.status.CRASHED) {\n        this.xPos++;\n      }\n      // Standing / running\n      this.canvasCtx.drawImage(this.sprite, sourceX, sourceY,\n        sourceWidth, sourceHeight,\n        this.xPos, this.yPos,\n        this.config.WIDTH, this.config.HEIGHT);\n    }\n  }\n\n  /**\n   * Sets a random time for the blink to happen.\n   */\n  setBlinkDelay() {\n    this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING);\n  }\n\n  /**\n   * Make t-rex blink at random intervals.\n   * @param {number} time Current time in milliseconds.\n   */\n  blink(time) {\n    var deltaTime = time - this.animStartTime;\n\n    if (deltaTime >= this.blinkDelay) {\n      this.draw(this.currentAnimFrames[this.currentFrame], 0);\n\n      if (this.currentFrame == 1) {\n        // Set new random delay to blink.\n        this.setBlinkDelay();\n        this.animStartTime = time;\n        this.blinkCount++;\n      }\n    }\n  }\n\n  /**\n   * Initialise a jump.\n   * @param {number} speed\n   */\n  startJump(speed) {\n    if (!this.jumping) {\n      this.update(0, Trex.status.JUMPING);\n      // Tweak the jump velocity based on the speed.\n      this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY - (speed / 10);\n      this.jumping = true;\n      this.reachedMinHeight = false;\n      this.speedDrop = false;\n    }\n  }\n\n  /**\n   * Jump is complete, falling down.\n   */\n  endJump() {\n    if (this.reachedMinHeight &&\n      this.jumpVelocity < this.config.DROP_VELOCITY) {\n      this.jumpVelocity = this.config.DROP_VELOCITY;\n    }\n  }\n\n  /**\n   * Update frame for a jump.\n   * @param {number} deltaTime\n   * @param {number} speed\n   */\n  updateJump(deltaTime, speed) {\n    var msPerFrame = Trex.animFrames[this.status].msPerFrame;\n    var framesElapsed = deltaTime / msPerFrame;\n\n    // Speed drop makes Trex fall faster.\n    if (this.speedDrop) {\n      this.yPos += Math.round(this.jumpVelocity *\n        this.config.SPEED_DROP_COEFFICIENT * framesElapsed);\n    } else {\n      this.yPos += Math.round(this.jumpVelocity * framesElapsed);\n    }\n\n    this.jumpVelocity += this.config.GRAVITY * framesElapsed;\n\n    // Minimum height has been reached.\n    if (this.yPos < this.minJumpHeight || this.speedDrop) {\n      this.reachedMinHeight = true;\n    }\n\n    // Reached max height\n    if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) {\n      this.endJump();\n    }\n\n    // Back down at ground level. Jump completed.\n    if (this.yPos > this.groundYPos) {\n      this.reset();\n      this.jumpCount++;\n    }\n\n    this.update(deltaTime);\n  }\n\n  /**\n   * Set the speed drop. Immediately cancels the current jump.\n   */\n  setSpeedDrop() {\n    this.speedDrop = true;\n    this.jumpVelocity = 1;\n  }\n\n  /**\n   * @param {boolean} isDucking.\n   */\n  setDuck(isDucking) {\n    if (isDucking && this.status != Trex.status.DUCKING) {\n      this.update(0, Trex.status.DUCKING);\n      this.ducking = true;\n    } else if (this.status == Trex.status.DUCKING) {\n      this.update(0, Trex.status.RUNNING);\n      this.ducking = false;\n    }\n  }\n\n  /**\n   * Reset the t-rex to running at start of game.\n   */\n  reset() {\n    this.yPos = this.groundYPos;\n    this.jumpVelocity = 0;\n    this.jumping = false;\n    this.ducking = false;\n    this.update(0, Trex.status.RUNNING);\n    this.midair = false;\n    this.speedDrop = false;\n    this.jumpCount = 0;\n  }\n\n\n}\n\nTrex = Object.assign(Trex, trexConfig);\n\nexport default Trex;\n\n\n// WEBPACK FOOTER //\n// ./src/trex/trex.js","import DistanceMeter from './distanceMeter';\n\nexport default DistanceMeter;\n\n\n// WEBPACK FOOTER //\n// ./src/distanceMeter/index.js","import { distanceMeterConfig } from 'Configs';\n\nclass DistanceMeter {\n  constructor(canvas, spritePos, canvasWidth) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    // this.image = Runner.imageSprite;\n    this.spritePos = spritePos;\n    this.x = 0;\n    this.y = 5;\n\n    this.currentDistance = 0;\n    this.maxScore = 0;\n    this.highScore = 0;\n    this.container = null;\n\n    this.digits = [];\n    this.acheivement = false;\n    this.defaultString = '';\n    this.flashTimer = 0;\n    this.flashIterations = 0;\n    this.invertTrigger = false;\n\n    this.config = DistanceMeter.config;\n    this.maxScoreUnits = this.config.MAX_DISTANCE_UNITS;\n    this.init(canvasWidth);\n  }\n  init(width) {\n    var maxDistanceStr = '';\n\n    this.calcXPos(width);\n    this.maxScore = this.maxScoreUnits;\n    for (var i = 0; i < this.maxScoreUnits; i++) {\n      this.draw(i, 0);\n      this.defaultString += '0';\n      maxDistanceStr += '9';\n    }\n\n    this.maxScore = parseInt(maxDistanceStr);\n  }\n\n  /**\n   * Calculate the xPos in the canvas.\n   * @param {number} canvasWidth\n   */\n  calcXPos(canvasWidth) {\n    this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH *\n      (this.maxScoreUnits + 1));\n  }\n\n  /**\n   * Draw a digit to canvas.\n   * @param {number} digitPos Position of the digit.\n   * @param {number} value Digit value 0-9.\n   * @param {boolean} opt_highScore Whether drawing the high score.\n   */\n  draw(digitPos, value, opt_highScore) {\n    // var sourceWidth = DistanceMeter.dimensions.WIDTH;\n    // var sourceHeight = DistanceMeter.dimensions.HEIGHT;\n    // var sourceX = DistanceMeter.dimensions.WIDTH * value;\n    // var sourceY = 0;\n\n    // var targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH;\n    // var targetY = this.y;\n    // var targetWidth = DistanceMeter.dimensions.WIDTH;\n    // var targetHeight = DistanceMeter.dimensions.HEIGHT;\n\n    // // For high DPI we 2x source values.\n    // if (IS_HIDPI) {\n    //   sourceWidth *= 2;\n    //   sourceHeight *= 2;\n    //   sourceX *= 2;\n    // }\n\n    // sourceX += this.spritePos.x;\n    // sourceY += this.spritePos.y;\n\n    // this.canvasCtx.save();\n\n    // if (opt_highScore) {\n    //   // Left of the current score.\n    //   var highScoreX = this.x - (this.maxScoreUnits * 2) *\n    //     DistanceMeter.dimensions.WIDTH;\n    //   this.canvasCtx.translate(highScoreX, this.y);\n    // } else {\n    //   this.canvasCtx.translate(this.x, this.y);\n    // }\n\n    // this.canvasCtx.drawImage(this.image, sourceX, sourceY,\n    //   sourceWidth, sourceHeight,\n    //   targetX, targetY,\n    //   targetWidth, targetHeight\n    // );\n\n    // this.canvasCtx.restore();\n  }\n\n  /**\n   * Covert pixel distance to a 'real' distance.\n   * @param {number} distance Pixel distance ran.\n   * @return {number} The 'real' distance ran.\n   */\n  getActualDistance(distance) {\n    return distance ? Math.round(distance * this.config.COEFFICIENT) : 0;\n  }\n\n  /**\n   * Update the distance meter.\n   * @param {number} distance\n   * @param {number} deltaTime\n   * @return {boolean} Whether the acheivement sound fx should be played.\n   */\n  update(deltaTime, distance) {\n    var paint = true;\n    var playSound = false;\n\n    if (!this.acheivement) {\n      distance = this.getActualDistance(distance);\n      // Score has gone beyond the initial digit count.\n      if (distance > this.maxScore && this.maxScoreUnits ==\n        this.config.MAX_DISTANCE_UNITS) {\n        this.maxScoreUnits++;\n        this.maxScore = parseInt(this.maxScore + '9');\n      } else {\n        this.distance = 0;\n      }\n\n      if (distance > 0) {\n        // Acheivement unlocked\n        if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) {\n          // Flash score and play sound.\n          this.acheivement = true;\n          this.flashTimer = 0;\n          playSound = true;\n        }\n\n        // Create a string representation of the distance with leading 0.\n        var distanceStr = (this.defaultString +\n          distance).substr(-this.maxScoreUnits);\n        this.digits = distanceStr.split('');\n      } else {\n        this.digits = this.defaultString.split('');\n      }\n    } else {\n      // Control flashing of the score on reaching acheivement.\n      if (this.flashIterations <= this.config.FLASH_ITERATIONS) {\n        this.flashTimer += deltaTime;\n\n        if (this.flashTimer < this.config.FLASH_DURATION) {\n          paint = false;\n        } else if (this.flashTimer >\n          this.config.FLASH_DURATION * 2) {\n          this.flashTimer = 0;\n          this.flashIterations++;\n        }\n      } else {\n        this.acheivement = false;\n        this.flashIterations = 0;\n        this.flashTimer = 0;\n      }\n    }\n\n    // Draw the digits if not flashing.\n    if (paint) {\n      for (var i = this.digits.length - 1; i >= 0; i--) {\n        this.draw(i, parseInt(this.digits[i]));\n      }\n    }\n\n    this.drawHighScore();\n    return playSound;\n  }\n\n  /**\n   * Draw the high score.\n   */\n  drawHighScore() {\n    // this.canvasCtx.save();\n    // this.canvasCtx.globalAlpha = .8;\n    // for (var i = this.highScore.length - 1; i >= 0; i--) {\n    //   this.draw(i, parseInt(this.highScore[i], 10), true);\n    // }\n    // this.canvasCtx.restore();\n  }\n\n  /**\n   * Set the highscore as a array string.\n   * Position of char in the sprite: H - 10, I - 11.\n   * @param {number} distance Distance ran in pixels.\n   */\n  setHighScore(distance) {\n    distance = this.getActualDistance(distance);\n    var highScoreStr = (this.defaultString +\n      distance).substr(-this.maxScoreUnits);\n\n    this.highScore = ['10', '11', ''].concat(highScoreStr.split(''));\n  }\n\n  /**\n   * Reset the distance meter back to '00000'.\n   */\n  reset() {\n    this.update(0);\n    this.acheivement = false;\n  }\n}\n\nDistanceMeter = Object.assign(DistanceMeter, distanceMeterConfig);\n\nexport default DistanceMeter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/distanceMeter/distanceMeter.js","import { runnerConfig } from 'Configs';\n\nclass ImagesLoader {\n  constructor(ids) {\n    this.images = [];\n    this.loadedCallback = null;\n    this.callbackCalled = false;\n    this.setImages(ids);\n  }\n\n  setImages(ids) {\n    for (let name in ids){\n      this.images.push(document.getElementById(ids[name]));\n    }\n  }\n\n  checkAll() {\n    return this.images.reduce((accumulated, current) => {\n      return accumulated && current.complete;\n    }, true);\n  }\n\n  addEventListeners () {\n    for (let img of this.images) {\n      img.addEventListener(runnerConfig.events.LOAD,() => {\n        if (this.checkAll() && !this.callbackCalled) {\n          this.callbackCalled = true;\n          this.loadedCallback();\n        }\n      });\n    }\n  }\n\n  onLoaded(callback) {\n    this.loadedCallback = callback;\n    this.addEventListeners();\n  }\n}\n\nexport default ImagesLoader;\n\n\n// WEBPACK FOOTER //\n// ./src/runner/imagesLoader.js"],"sourceRoot":""}